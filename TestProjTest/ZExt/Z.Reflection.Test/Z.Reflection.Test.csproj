<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{52CC2C91-8B49-43EB-BC47-D70F68689B0B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Z.Reflection.Test</RootNamespace>
    <AssemblyName>Z.Reflection.Test</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{3AC096D0-A1C2-E12C-1390-A8335801FDAB};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <ReferencePath>$(ProgramFiles)\Common Files\microsoft shared\VSTT\$(VisualStudioVersion)\UITestExtensionPackages</ReferencePath>
    <IsCodedUITest>False</IsCodedUITest>
    <TestProjectType>UnitTest</TestProjectType>
    <SccProjectName>SAK</SccProjectName>
    <SccLocalPath>SAK</SccLocalPath>
    <SccAuxPath>SAK</SccAuxPath>
    <SccProvider>SAK</SccProvider>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
  </ItemGroup>
  <Choose>
    <When Condition="('$(VisualStudioVersion)' == '10.0' or '$(VisualStudioVersion)' == '') and '$(TargetFrameworkVersion)' == 'v3.5'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.1.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" />
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework" />
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Compile Include="GetSignature\Constructor\GenericTypeConstructor.cs" />
    <Compile Include="GetSignature\Constructor\InParameterModifierConstructor.cs" />
    <Compile Include="GetSignature\Constructor\InternalConstructor.cs" />
    <Compile Include="GetSignature\Constructor\OptionalParameterConstructor.cs" />
    <Compile Include="GetSignature\Constructor\OptionalParameterModifierConstructor.cs" />
    <Compile Include="GetSignature\Constructor\OutParameterConstructor.cs" />
    <Compile Include="GetSignature\Constructor\OutParameterModifierConstructor.cs" />
    <Compile Include="GetSignature\Constructor\ParamsParameterConstructor.cs" />
    <Compile Include="GetSignature\Constructor\PrivateConstructor.cs" />
    <Compile Include="GetSignature\Constructor\PublicConstructor.cs" />
    <Compile Include="GetSignature\Constructor\RefParameterConstructor.cs" />
    <Compile Include="GetSignature\Field\ConstField.cs" />
    <Compile Include="GetSignature\Field\EventField.cs" />
    <Compile Include="GetSignature\Field\InternalField.cs" />
    <Compile Include="GetSignature\Field\PrivateField.cs" />
    <Compile Include="GetSignature\Field\ProtectedField.cs" />
    <Compile Include="GetSignature\Field\ProtectedInternalField.cs" />
    <Compile Include="GetSignature\Field\PublicField.cs" />
    <Compile Include="GetSignature\Field\ReadOnlyField.cs" />
    <Compile Include="GetSignature\Field\StaticField.cs" />
    <Compile Include="GetSignature\Field\VolatileField.cs" />
    <Compile Include="GetSignature\Method\AbstractMethod.cs" />
    <Compile Include="GetSignature\Method\ExtensionParameterMethod.cs" />
    <Compile Include="GetSignature\Method\GenericMethod.cs" />
    <Compile Include="GetSignature\Method\GenericTypeMethod.cs" />
    <Compile Include="GetSignature\Method\InParameterModifierMethod.cs" />
    <Compile Include="GetSignature\Method\InternalMethod.cs" />
    <Compile Include="GetSignature\Method\OptionalParameterMethod.cs" />
    <Compile Include="GetSignature\Method\OptionalParameterModifierMethod.cs" />
    <Compile Include="GetSignature\Method\OutParameterMethod.cs" />
    <Compile Include="GetSignature\Method\OutParameterModifierMethod.cs" />
    <Compile Include="GetSignature\Method\OverrideMethod.cs" />
    <Compile Include="GetSignature\Method\ParamsParameterMethod.cs" />
    <Compile Include="GetSignature\Method\PrivateMethod.cs" />
    <Compile Include="GetSignature\Method\ProtectedInternalMethod.cs" />
    <Compile Include="GetSignature\Method\ProtectedMethod.cs" />
    <Compile Include="GetSignature\Method\PublicMethod.cs" />
    <Compile Include="GetSignature\Method\RefParameterMethod.cs" />
    <Compile Include="GetSignature\Method\StaticMethod.cs" />
    <Compile Include="GetSignature\Method\VirtualMethod.cs" />
    <Compile Include="GetSignature\Property\AbstractProperty.cs" />
    <Compile Include="GetSignature\Property\GenericIndexerProperty.cs" />
    <Compile Include="GetSignature\Property\GenericProperty.cs" />
    <Compile Include="GetSignature\Property\GetterProperty.cs" />
    <Compile Include="GetSignature\Property\IndexerProperty.cs" />
    <Compile Include="GetSignature\Property\InternalProperty.cs" />
    <Compile Include="GetSignature\Property\OverrideProperty.cs" />
    <Compile Include="GetSignature\Property\PrivateGetterPublicSetterProperty.cs" />
    <Compile Include="GetSignature\Property\PrivateProperty.cs" />
    <Compile Include="GetSignature\Property\ProtectedInternalProperty.cs" />
    <Compile Include="GetSignature\Property\ProtectedProperty.cs" />
    <Compile Include="GetSignature\Property\PublicGetterPrivateSetterProperty.cs" />
    <Compile Include="GetSignature\Property\PublicProperty.cs" />
    <Compile Include="GetSignature\Property\SetterProperty.cs" />
    <Compile Include="GetSignature\Property\StaticProperty.cs" />
    <Compile Include="GetSignature\Property\VirtualProperty.cs" />
    <Compile Include="GetSignature\Type\AbstractClass.cs" />
    <Compile Include="GetSignature\Type\GenericClass.cs" />
    <Compile Include="GetSignature\Type\GenericClassWithWhereClause.cs" />
    <Compile Include="GetSignature\Type\IGenericInterfaceWithInParameter.cs" />
    <Compile Include="GetSignature\Type\IGenericInterfaceWithOutParameter.cs" />
    <Compile Include="GetSignature\Type\InheritedClass.cs" />
    <Compile Include="GetSignature\Type\InheritedClassAndInterface.cs" />
    <Compile Include="GetSignature\Type\InternalClass.cs" />
    <Compile Include="GetSignature\Type\IPublicInterface.cs" />
    <Compile Include="GetSignature\Type\PublicClass.cs" />
    <Compile Include="GetSignature\Type\StaticClass.cs" />
    <Compile Include="GetDeclaration\Constructor\GenericTypeConstructor.cs" />
    <Compile Include="GetDeclaration\Constructor\InParameterModifierConstructor.cs" />
    <Compile Include="GetDeclaration\Constructor\InternalConstructor.cs" />
    <Compile Include="GetDeclaration\Constructor\OptionalParameterConstructor.cs" />
    <Compile Include="GetDeclaration\Constructor\OptionalParameterModifierConstructor.cs" />
    <Compile Include="GetDeclaration\Constructor\OutParameterConstructor.cs" />
    <Compile Include="GetDeclaration\Constructor\OutParameterModifierConstructor.cs" />
    <Compile Include="GetDeclaration\Constructor\ParamsParameterConstructor.cs" />
    <Compile Include="GetDeclaration\Constructor\PrivateConstructor.cs" />
    <Compile Include="GetDeclaration\Constructor\PublicConstructor.cs" />
    <Compile Include="GetDeclaration\Constructor\RefParameterConstructor.cs" />
    <Compile Include="GetDeclaration\Method\ExtensionParameterMethod.cs" />
    <Compile Include="GetDeclaration\Method\GenericMethod.cs" />
    <Compile Include="GetDeclaration\Method\OptionalParameterMethod.cs" />
    <Compile Include="GetDeclaration\Method\GenericTypeMethod.cs" />
    <Compile Include="GetDeclaration\Method\ParamsParameterMethod.cs" />
    <Compile Include="GetDeclaration\Method\RefParameterMethod.cs" />
    <Compile Include="GetDeclaration\Method\OutParameterMethod.cs" />
    <Compile Include="GetDeclaration\Method\AbstractMethod.cs" />
    <Compile Include="GetDeclaration\Method\InternalMethod.cs" />
    <Compile Include="GetDeclaration\Method\OverrideMethod.cs" />
    <Compile Include="GetDeclaration\Method\PrivateMethod.cs" />
    <Compile Include="GetDeclaration\Method\ProtectedInternalMethod.cs" />
    <Compile Include="GetDeclaration\Method\ProtectedMethod.cs" />
    <Compile Include="GetDeclaration\Method\PublicMethod.cs" />
    <Compile Include="GetDeclaration\Method\StaticMethod.cs" />
    <Compile Include="GetDeclaration\Method\InParameterModifierMethod.cs" />
    <Compile Include="GetDeclaration\Method\OutParameterModifierMethod.cs" />
    <Compile Include="GetDeclaration\Method\OptionalParameterModifierMethod.cs" />
    <Compile Include="GetDeclaration\Method\VirtualMethod.cs" />
    <Compile Include="GetDeclaration\Property\GenericProperty.cs" />
    <Compile Include="GetDeclaration\Property\GenericIndexerProperty.cs" />
    <Compile Include="GetDeclaration\Property\AbstractProperty.cs" />
    <Compile Include="GetDeclaration\Property\IndexerProperty.cs" />
    <Compile Include="GetDeclaration\Property\GetterProperty.cs" />
    <Compile Include="GetDeclaration\Property\SetterProperty.cs" />
    <Compile Include="GetDeclaration\Property\PublicGetterPrivateSetterProperty.cs" />
    <Compile Include="GetDeclaration\Property\PrivateGetterPublicSetterProperty.cs" />
    <Compile Include="GetDeclaration\Property\InternalProperty.cs" />
    <Compile Include="GetDeclaration\Property\PrivateProperty.cs" />
    <Compile Include="GetDeclaration\Property\ProtectedProperty.cs" />
    <Compile Include="GetDeclaration\Property\ProtectedInternalProperty.cs" />
    <Compile Include="GetDeclaration\Property\PublicProperty.cs" />
    <Compile Include="GetDeclaration\Property\OverrideProperty.cs" />
    <Compile Include="GetDeclaration\Property\VirtualProperty.cs" />
    <Compile Include="GetDeclaration\Property\StaticProperty.cs" />
    <Compile Include="GetDeclaration\Field\ConstField.cs" />
    <Compile Include="GetDeclaration\Field\EventField.cs" />
    <Compile Include="GetDeclaration\Field\ReadOnlyField.cs" />
    <Compile Include="GetDeclaration\Field\VolatileField.cs" />
    <Compile Include="GetDeclaration\Field\PublicField.cs" />
    <Compile Include="GetDeclaration\Field\PrivateField.cs" />
    <Compile Include="GetDeclaration\Field\InternalField.cs" />
    <Compile Include="GetDeclaration\Field\ProtectedField.cs" />
    <Compile Include="GetDeclaration\Field\ProtectedInternalField.cs" />
    <Compile Include="GetDeclaration\Field\StaticField.cs" />
    <Compile Include="GetDeclaration\Type\AbstractClass.cs" />
    <Compile Include="GetDeclaration\Type\PublicClass.cs" />
    <Compile Include="GetDeclaration\Type\InternalClass.cs" />
    <Compile Include="GetDeclaration\Type\IPublicInterface.cs" />
    <Compile Include="GetDeclaration\Type\InheritedClass.cs" />
    <Compile Include="GetDeclaration\Type\InheritedClassAndInterface.cs" />
    <Compile Include="GetDeclaration\Type\GenericClass.cs" />
    <Compile Include="GetDeclaration\Type\GenericClassWithWhereClause.cs" />
    <Compile Include="GetDeclaration\Type\IGenericInterfaceWithInParameter.cs" />
    <Compile Include="GetDeclaration\Type\IGenericInterfaceWithOutParameter.cs" />
    <Compile Include="GetCustomAttribute\Object.GetCustomAttributesByFullName.cs" />
    <Compile Include="GetCustomAttribute\Object.GetCustomAttributeByFullName.cs" />
    <Compile Include="GetCustomAttribute\Object.GetCustomAttributesByName.cs" />
    <Compile Include="GetCustomAttribute\Object.GetCustomAttributeByName.cs" />
    <Compile Include="GetCustomAttribute\Object.GetCustomAttribute.cs" />
    <Compile Include="GetCustomAttribute\Object.GetCustomAttributes.cs" />
    <Compile Include="_Model\ConstructorModel.cs" />
    <Compile Include="_Model\MethodModel.cs" />
    <Compile Include="_Model\PropertyModel.cs" />
    <Compile Include="_Model\FieldModel.cs" />
    <Compile Include="_Model\TypeModel.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="GetDeclaration\Type\StaticClass.cs" />
    <Compile Include="GetCustomAttribute\Object.GetCustomAttributeDescription.cs" />
    <Compile Include="System.Object\Object.GetFieldValue.cs" />
    <Compile Include="System.Object\Object.GetProperty.cs" />
    <Compile Include="System.Object\Object.IsTypeOrInheritsOf.cs" />
    <Compile Include="System.Object\Object.SetFieldValue.cs" />
    <Compile Include="System.Object\Object.SetPropertyValue.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\src\Z.Reflection\Z.Reflection.csproj">
      <Project>{c3eda334-3d94-4960-93b9-3026adc4cc12}</Project>
      <Name>Z.Reflection</Name>
    </ProjectReference>
  </ItemGroup>
  <Choose>
    <When Condition="'$(VisualStudioVersion)' == '10.0' And '$(IsCodedUITest)' == 'True'">
      <ItemGroup>
        <Reference Include="Microsoft.VisualStudio.QualityTools.CodedUITestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Common, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITest.Extension, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
        <Reference Include="Microsoft.VisualStudio.TestTools.UITesting, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
          <Private>False</Private>
        </Reference>
      </ItemGroup>
    </When>
  </Choose>
  <Import Project="$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets" Condition="Exists('$(VSToolsPath)\TeamTest\Microsoft.TestTools.targets')" />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>