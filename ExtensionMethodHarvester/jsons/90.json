{"Name":"AddWorkdays","Description":"A modification to the AddDay function that adds an integer number of weekdays to a date, starting the count at the first weekday after the current day. This is a typical method for calculating B2B service delivery and billing due dates.","Author":"Lee Harding","SubmittedOn":"6/5/2009 6:44:20 AM","Entries":["public static class DateTimeExtensions\r\n{\r\n    public static bool IsWeekend(this DayOfWeek d) \r\n    { \r\n        return !d.IsWeekday(); \r\n    }\r\n\r\n    public static bool IsWeekday(this DayOfWeek d)\r\n    {\r\n        switch (d)\r\n        {\r\n            case DayOfWeek.Sunday:\r\n            case DayOfWeek.Saturday: return false;\r\n\r\n            default: return true;\r\n        }\r\n    }\r\n\r\n    public static DateTime AddWorkdays(this DateTime d, int days)\r\n    {\r\n        // start from a weekday\r\n        while (d.DayOfWeek.IsWeekday()) d = d.AddDays(1.0);\r\n        for (int i = 0; i < days; ++i)\r\n        {\r\n            d = d.AddDays(1.0);\r\n            while (d.DayOfWeek.IsWeekday()) d = d.AddDays(1.0);\r\n        }\r\n        return d;\r\n    }\r\n}","DateTime due = DateTime.Today.AddWorkdays(10); // due in 10 workdays"]}