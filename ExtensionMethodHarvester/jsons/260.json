{"Name":"Repeat","Description":"Repeat a string N times","Author":"Robert E. Bratton","SubmittedOn":"9/12/2013 8:41:31 PM","Entries":["using System.Text;\r\n\r\nnamespace MyExtensions\r\n{\r\n    public static class StringExtensions\r\n    {\r\n        public static string Repeat(this string input, int count)\r\n        {\r\n            if (input == null)\r\n            {\r\n                return null; \r\n            }\r\n\r\n            var sb = new StringBuilder();\r\n\r\n            for (var repeat = 0; repeat < count; repeat++)\r\n            {\r\n                sb.Append(input);\r\n            }\r\n\r\n            return sb.ToString();\r\n        }\r\n    }\r\n}","using System;\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing MyExtensions;\r\n\r\n\r\nnamespace StringExtensionsTests\r\n{\r\n    [TestClass]\r\n    public class StringExtensionsTests\r\n    {\r\n        [TestMethod]\r\n        public void RepeatBlank10()\r\n        {\r\n            var repeat10 = \"\".Repeat(10);\r\n            Assert.AreEqual(0, repeat10.Length);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RepeatNull10()\r\n        {\r\n            string nullString = null; \r\n// ReSharper disable once ExpressionIsAlwaysNull\r\n            var repeat10 = nullString.Repeat(10);\r\n            Assert.IsNull(repeat10);\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RepeatSingle0()\r\n        {\r\n            var repeat10 = \"x\".Repeat(0);\r\n            Assert.AreEqual(0, repeat10.Length);\r\n\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RepeatSingle10()\r\n        {\r\n            var repeat10 = \"x\".Repeat(10);\r\n            Assert.AreEqual(10, repeat10.Length);\r\n\r\n        }\r\n\r\n        [TestMethod]\r\n        public void RepeatMulti10()\r\n        {\r\n            var repeat10 = \"xxx\".Repeat(10);\r\n            Assert.AreEqual(30, repeat10.Length);\r\n\r\n        }\r\n\r\n    \r\n    }\r\n}"]}