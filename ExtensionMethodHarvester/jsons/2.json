{"Name":"ToListAsync","Description":"Async create of a System.Collections.Generic.List<T> from an System.Collections.Generic.IQueryable<T>.","Author":"Fons Sonnemans","SubmittedOn":"5/28/2012 10:49:55 AM","Entries":["using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ReflectionIT.Linq {\r\n\r\n    static class Utils {\r\n\r\n        /// <summary>\r\n        /// Async create of a System.Collections.Generic.List<T> from an \r\n        /// System.Collections.Generic.IQueryable<T>.\r\n        /// </summary>\r\n        /// <typeparam name=\"T\">The type of the elements of source.</typeparam>\r\n        /// <param name=\"list\">The System.Collections.Generic.IEnumerable<T> \r\n        /// to create a System.Collections.Generic.List<T> from.</param>\r\n        /// <returns> A System.Collections.Generic.List<T> that contains elements \r\n        /// from the input sequence.</returns>\r\n        public static Task<List<T>> ToListAsync<T>(this IQueryable<T> list) {\r\n            return Task.Run(() => list.ToList());\r\n        }\r\n\r\n    }\r\n}","private async void Foo() {\r\n\r\n    using (var db = new Database1Entities()) {\r\n\r\n        var qry = await (from emp in db.Employees\r\n                    where emp.Salary > 1\r\n                    select emp).ToListAsync();\r\n\r\n\r\n        foreach (var item in qry) {\r\n            Debug.WriteLine(item.Name);\r\n        }\r\n                \r\n    }\r\n\r\n}"]}