{"Name":"Add<T>","Description":"A generic method to add databinding to a control. This method brings type safety for the sake of better code maintainability.","Author":"Alireza Mokhtaripour","SubmittedOn":"3/26/2013 2:34:10 PM","Entries":["public static Binding Add<T>(this ControlBindingsCollection bindingCollection, string property, object datasource, Expression<Func<T, object>> expression)\r\n        {\r\n            string relatedNameChain = \"\";\r\n            if (expression.Body is UnaryExpression)\r\n                relatedNameChain = ((expression.Body as UnaryExpression).Operand as MemberExpression).ToString();\r\n            else if (expression.Body is MemberExpression)\r\n                relatedNameChain = (expression.Body as MemberExpression).ToString();\r\n\r\n            string skippedName = String.Join(\".\", relatedNameChain.Split(new char[] { '.' }).Skip(1).ToArray());\r\n            return bindingCollection.Add(property, datasource, skippedName);\r\n        }","var txtName = new System.Windows.Forms.TextBox();\r\nvar ds = new System.Windows.Forms.BindingSource();\r\ntxtName.DataBindings.Add<tblProduct>(\"Text\", ds, p => p.ProductName, true, DataSourceUpdateMode.OnValidation, \"\");"]}