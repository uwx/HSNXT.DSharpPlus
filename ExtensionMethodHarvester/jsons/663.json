{"Name":"ValidateAndConvertDictionaryData","Description":"Dictionary Extension","Author":"Cem Basaranoglu","SubmittedOn":"12/22/2016 8:48:03 AM","Entries":["public static class DictionaryExtensions\r\n    {\r\n        public static T ValidateAndConvertDictionaryData<T>(this Dictionary<string, object> dictionary, string dictionaryKey)\r\n        {\r\n            if (dictionary != null && dictionary.ContainsKey(dictionaryKey))\r\n            {\r\n                object dictionaryValue;\r\n                dictionary.TryGetValue(dictionaryKey, out dictionaryValue);\r\n\r\n                if (dictionaryValue != null)\r\n                {\r\n                    return dictionaryValue.TryToCast<T>();\r\n                }\r\n            }\r\n\r\n            return default(T);\r\n        }\r\n\r\n   public static T TryToCast<T>(this object value)\r\n        {\r\n            if (value is T)\r\n            {\r\n                return (T)value;\r\n            }\r\n            try\r\n            {\r\n\r\n                if (typeof(T).IsEnum)\r\n                {\r\n                    return (T)Enum.Parse(typeof(T), value.ToString());\r\n                }\r\n\r\n                return (T)Convert.ChangeType(value, typeof(T));\r\n            }\r\n            catch (Exception)\r\n            {\r\n                return default(T);\r\n            }\r\n\r\n        }\r\n\r\n    }","Dictionary<string, object> dictionary = new Dictionary<string, object> {{\"FOO\", 1}};\r\n  string foo = dictionary.ValidateAndConvertDictionaryData<string>(\"FOO\");"]}