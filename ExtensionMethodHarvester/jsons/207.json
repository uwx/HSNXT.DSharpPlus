{"Name":"Enum HasDescription","Description":"Multiple ways to check if an enum has description","Author":"Nitin Chaudhari","SubmittedOn":"6/23/2014 7:44:21 AM","Entries":["public static class EnumExtensions\r\n    {\r\n        public static string Description(this Enum someEnum)\r\n        {\r\n            var memInfo = someEnum.GetType().GetMember(someEnum.ToString());\r\n \r\n            if (memInfo != null && memInfo.Length > 0)\r\n            {\r\n                object[] attrs = memInfo[0].GetCustomAttributes(typeof(DescriptionAttribute),false);\r\n \r\n                if (attrs != null && attrs.Length > 0)\r\n                    return ((DescriptionAttribute)attrs[0]).Description;\r\n            }\r\n            return someEnum.ToString();\r\n        }\r\n        public static bool HasDescription(this Enum someEnum)\r\n        {\r\n            return !string.IsNullOrWhiteSpace(someEnum.Description());\r\n        }\r\n        public static bool HasDescription(this Enum someEnum, string expectedDescription)\r\n        {\r\n            return someEnum.Description().Equals(expectedDescription);\r\n        }\r\n        public static bool HasDescription(this Enum someEnum, string expectedDescription, StringComparison comparisionType)\r\n        {\r\n            return someEnum.Description().Equals(expectedDescription, comparisionType);\r\n        }\r\n    }","class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            const Colors someColor = Colors.Red;\r\n            string description = someColor.Description();\r\n            if (someColor.HasDescription())\r\n            {\r\n                if (someColor.HasDescription(\"indicates stop\", StringComparison.OrdinalIgnoreCase))\r\n                {\r\n                    Console.WriteLine(\"Works\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public enum Colors\r\n    {\r\n        [Description(\"Indicates Stop\")]\r\n        Red,\r\n        [Description(\"Indicates Nothing\")]\r\n        Blue,\r\n        [Description(\"Indicates Go\")]\r\n        Green\r\n    }"]}