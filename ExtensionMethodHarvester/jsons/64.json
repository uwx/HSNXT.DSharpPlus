{"Name":"Load & Save configuration","Description":"Two methods that extends DataGridView control to save and load columns configuration to specified XML file. More informations (in Polish, example in English) at: http://kozub.net.pl/2012/02/22/datagridview-konfiguracja-kolumn-oraz-zapis-i-odczyt-stanu/ http://kozub.net.pl/2012/03/21/c-extension-methods/","Author":"Marcin Kozub","SubmittedOn":"3/22/2012 1:40:08 PM","Entries":["using System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System.Windows.Forms;\r\nusing System.Xml.Serialization;\r\n\r\nnamespace DataGridViewExtensions\r\n{\r\n    [Serializable]\r\n    public sealed class ColumnInfo\r\n    {\r\n        public string Name { get; set; }\r\n        public int DisplayIndex { get; set; }\r\n        public int Width { get; set; }\r\n        public bool Visible { get; set; }\r\n    }\r\n\r\n    public static class DataGridViewExtenstions\r\n    {\r\n        /// <summary>\r\n        /// Loads columns information from the specified XML file\r\n        /// </summary>\r\n        /// <param name=\"dgv\">DataGridView control instance</param>\r\n        /// <param name=\"fileName\">XML configuration file</param>\r\n        public static void LoadConfiguration(this DataGridView dgv, string fileName)\r\n        {\r\n            List<ColumnInfo> columns;\r\n            using (var streamReader = new StreamReader(fileName))\r\n            {\r\n                var xmlSerializer = new XmlSerializer(typeof(List<ColumnInfo>));\r\n                columns = (List<ColumnInfo>)xmlSerializer.Deserialize(streamReader);\r\n            }\r\n            foreach (var column in columns)\r\n            {\r\n                dgv.Columns[column.Name].DisplayIndex = column.DisplayIndex;\r\n                dgv.Columns[column.Name].Width = column.Width;\r\n                dgv.Columns[column.Name].Visible = column.Visible;\r\n            }\r\n        }\r\n\r\n        /// <summary>\r\n        /// Saves columns information to the specified XML file\r\n        /// </summary>\r\n        /// <param name=\"dgv\">DataGridView control instance</param>\r\n        /// <param name=\"fileName\">XML configuration file</param>\r\n        public static void SaveConfiguration(this DataGridView dgv, string fileName)\r\n        {\r\n            var columns = new List<ColumnInfo>();\r\n            for (int i = 0; i < dgv.Columns.Count; i++)\r\n            {\r\n                var column = new ColumnInfo();\r\n                column.Name = dgv.Columns[i].Name;\r\n                column.DisplayIndex = dgv.Columns[i].DisplayIndex;\r\n                column.Width = dgv.Columns[i].Width;\r\n                column.Visible = dgv.Columns[i].Visible;\r\n                columns.Add(column);\r\n            }            \r\n            using (var streamWriter = new StreamWriter(fileName))\r\n            {\r\n                var xmlSerializer = new XmlSerializer(typeof(List<ColumnInfo>));\r\n                xmlSerializer.Serialize(streamWriter, columns);\r\n            }\r\n        }\r\n    }\r\n}","dgvInstance.SaveConfiguration(@\"C:\\config.xml\");\r\ndgvInstance.LoadConfiguration(@\"C:\\config.xml\");"]}