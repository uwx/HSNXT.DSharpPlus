{"Name":"Say","Description":"Speaks any object using the speech synthesis API","Author":"totally professional rock star coder","SubmittedOn":"3/11/2015 8:14:34 PM","Entries":["public static T Say<T>(this T thing) {\r\n\tconst int enumerableLimit = 100;\r\n\t\r\n\tobject obj = thing;\r\n\tif(obj == null) {\r\n\t\tobj = \"null reference\";\r\n\t}\r\n\t\r\n\tvar enumerable = obj as IEnumerable;\r\n\tif(enumerable != null && obj.GetType() != typeof(string)) {\r\n\t\tvar items = enumerable.OfType<object>().Take(enumerableLimit + 1).ToList();\r\n\t\tif(items.Count == enumerableLimit + 1) {\r\n\t\t\titems[enumerableLimit] = \"and so on\";\r\n\t\t}\r\n\t\tforeach(var x in items) {\r\n\t\t\tSay(x);\r\n\t\t}\r\n\t} else {\r\n\t\tusing(var synth = new System.Speech.Synthesis.SpeechSynthesizer()) {\r\n\t\t\tsynth.Speak(obj.ToString());\r\n\t\t}\r\n\t}\r\n\treturn thing;\r\n}","var files = Say(Directory.GetFiles(\"c:\\\\\"));\r\nSay(\"and the total size is\");\r\nvar size = files.Select(x => new FileInfo(x).Length).Sum();\r\nSay(size);\r\nSay(\"bytes\");"]}