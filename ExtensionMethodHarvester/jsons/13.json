{"Name":"WhereIf","Description":"When building a LINQ query, you may need to involve optional filtering criteria. Avoids if statements when building predicates & lambdas for a query. Useful when you don't know at compile time whether a filter should apply. Borrowed from Andrew Robinson. http://bit.ly/1V36G9","Author":"Phil Campbell","SubmittedOn":"11/17/2009 10:47:55 PM","Entries":["public static IEnumerable<TSource> WhereIf<TSource>(this IEnumerable<TSource> source, bool condition, Func<TSource, bool> predicate)\r\n{\r\n    if (condition)\r\n        return source.Where(predicate);\r\n    else\r\n        return source;\r\n}\r\n\r\npublic static IEnumerable<TSource> WhereIf<TSource>(this IEnumerable<TSource> source, bool condition, Func<TSource, int, bool> predicate)\r\n{\r\n    if (condition)\r\n        return source.Where(predicate);\r\n    else\r\n        return source;\r\n}","List<Customer> custs = new List<Customer>{\r\nnew Customer {FirstName = \"Peggy\", AcctBalance = 12442.98},\r\nnew Customer {FirstName = \"Sally\", AcctBalance = 32.39},\r\nnew Customer {FirstName = \"Billy\", AcctBalance = 25.33},\r\nnew Customer {FirstName = \"Tommy\", AcctBalance = 12345}\r\n};\r\n\r\nbool showAccountBalancesUnder5000 = false;\r\n\r\nvar custList = custs.WhereIf(showAccountBalancesUnder5000, c=>c.AcctBalance < 5000).ToList(); //will not perform the filtering\r\n\r\nshowAccountBalancesUnder5000 = true;\r\n\r\nvar custListUnder5000 = custs.WhereIf(showAccountBalancesUnder5000, c=>c.AcctBalance < 5000).ToList(); //will perform the filtering"]}