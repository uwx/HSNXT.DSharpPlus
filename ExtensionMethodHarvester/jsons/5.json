{"Name":"DataReader to CSV","Description":"Export DataReader to CSV (List<String>). Basic example that to export data to csv from a datareader. Handle value if it contains the separator and/or double quotes but can be easily be expended to include culture (date, etc...) , max errors, and more.","Author":"Thierry Fierens","SubmittedOn":"6/10/2013 12:51:01 AM","Entries":["public static List<string> ToCSV(this IDataReader dataReader, bool includeHeaderAsFirstRow, string separator)\r\n{\r\n    List<string> csvRows = new List<string>();\r\n    StringBuilder sb = null;\r\n\r\n    if (includeHeaderAsFirstRow)\r\n    {\r\n        sb = new StringBuilder();\r\n        for (int index = 0; index < dataReader.FieldCount; index++)\r\n        {\r\n            if (dataReader.GetName(index) != null)\r\n                sb.Append(dataReader.GetName(index));\r\n\r\n            if (index < dataReader.FieldCount - 1)\r\n                sb.Append(separator);\r\n        }\r\n        csvRows.Add(sb.ToString());\r\n    }\r\n\r\n    while (dataReader.Read())\r\n    {\r\n        sb = new StringBuilder();\r\n        for (int index = 0; index < dataReader.FieldCount - 1; index++)\r\n        {\r\n            if (!dataReader.IsDBNull(index))\r\n            {\r\n                string value = dataReader.GetValue(index).ToString();\r\n                if (dataReader.GetFieldType(index) == typeof(String))\r\n                {\r\n                    //If double quotes are used in value, ensure each are replaced but 2.\r\n                    if (value.IndexOf(\"\\\"\") >= 0)\r\n                        value = value.Replace(\"\\\"\", \"\\\"\\\"\");\r\n\r\n                    //If separtor are is in value, ensure it is put in double quotes.\r\n                    if (value.IndexOf(separator) >= 0)\r\n                        value = \"\\\"\" + value + \"\\\"\";\r\n                }\r\n                sb.Append(value);\r\n            }\r\n\r\n            if (index < dataReader.FieldCount - 1)\r\n                sb.Append(separator);\r\n        }\r\n\r\n        if (!dataReader.IsDBNull(dataReader.FieldCount - 1))\r\n            sb.Append(dataReader.GetValue(dataReader.FieldCount - 1).ToString().Replace(separator, \" \"));\r\n\r\n        csvRows.Add(sb.ToString());\r\n    }\r\n    dataReader.Close();\r\n    sb = null;\r\n    return csvRows;\r\n}","List<string> rows = null;\r\nusing (SqlDataReader dataReader = command.ExecuteReader())\r\n    {\r\n        rows = dataReader.ToCSV(includeHeadersAsFirstRow, separator);\r\n        dataReader.Close();\r\n    }"]}