{"Name":"RightOf","Description":"Return the remainder of a string s after a separator c.","Author":"Gaston Verelst","SubmittedOn":"6/21/2010 8:20:53 AM","Entries":["/// <summary>\r\n        /// Return the remainder of a string s after a separator c.\r\n        /// </summary>\r\n        /// <param name=\"s\">String to search in.</param>\r\n        /// <param name=\"c\">Separator</param>\r\n        /// <returns>The right part of the string after the character c, or the string itself when c isn't found.</returns>\r\n        public static string RightOf(this string s, char c)\r\n        {\r\n            int ndx = s.IndexOf(c);\r\n            if (ndx == -1)\r\n                return s;\r\n            return s.Substring(ndx + 1);\r\n        }","/// <summary>\r\n        ///A test for RightOf\r\n        ///</summary>\r\n        [TestMethod()]\r\n        public void RightOfTest()\r\n        {\r\n            string s = \"XYZ,1234\";\r\n            char c = ',';\r\n            string expected = \"1234\";\r\n            string actual;\r\n            actual = StringExtensions.RightOf(s, c);\r\n            Assert.AreEqual(expected, actual);\r\n\r\n            s = \"XYZ,1234,ABC\";\r\n            c = ',';\r\n            expected = \"1234,ABC\";\r\n            actual = StringExtensions.RightOf(s, c);\r\n            Assert.AreEqual(expected, actual);\r\n\r\n            s = \"XYZ\";\r\n            c = ',';\r\n            expected = \"XYZ\";\r\n            actual = StringExtensions.RightOf(s, c);\r\n            Assert.AreEqual(expected, actual);\r\n\r\n        }"]}