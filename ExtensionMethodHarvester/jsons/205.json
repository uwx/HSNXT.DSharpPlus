{"Name":"Piero Alvarez Fuentes","Description":"Converts any type to another.","Author":"Piero Alvarez Fuentes","SubmittedOn":"11/15/2012 12:50:38 PM","Entries":["using System.ComponentModel;\r\n\r\npublic static U ChangeType<U>(this object source, U returnValueIfException)\r\n{\r\n    try\r\n    {\r\n        return source.ChangeType<U>();\r\n    }\r\n    catch\r\n    {\r\n        return returnValueIfException;\r\n    }\r\n}\r\n\r\npublic static U ChangeType<U>(this object source)\r\n{\r\n    if (source is U)\r\n        return (U)source;\r\n\r\n    var destinationType = typeof(U);\r\n    if (destinationType.IsGenericType && destinationType.GetGenericTypeDefinition().Equals(typeof(Nullable<>)))\r\n        destinationType = new NullableConverter(destinationType).UnderlyingType;\r\n\r\n    return (U)Convert.ChangeType(source, destinationType);\r\n}","string a = \"1234\";\r\nint b = a.ChangeType<int>(); //Successful conversion to int (b=1234)\r\nstring c = b.ChangeType<string>(); //Successful conversion to string (c=\"1234\")\r\nstring d = \"foo\";\r\nint e = d.ChangeType<int>(); //Exception System.InvalidCastException\r\nint f = d.ChangeType(0); //Successful conversion to int (f=0)"]}