{"Name":"Standard Deviation LINQ extension method","Description":"Typical standard deviation formula set in LINQ fluent syntax. For when Average, Min, and Max just aren't enough information.","Author":"ParrottSquawk","SubmittedOn":"8/6/2013 3:03:44 PM","Entries":["public static double StdDevP(this IEnumerable<int> source)\r\n        {\r\n            return StdDevLogic(source, 0);\r\n        }\r\n\r\n        public static double StdDev(this IEnumerable<int> source)\r\n        {\r\n            return StdDevLogic(source, 1);\r\n        }\r\n\r\n        private static double StdDevLogic(this IEnumerable<int> source, int buffer = 1)\r\n        {\r\n            if (source == null)\r\n            { throw new ArgumentNullException(\"source\"); }\r\n\r\n            var data = source.ToList();\r\n            var average = data.Average();\r\n            var differences = data.Select(u => Math.Pow(average - u, 2.0)).ToList();\r\n            return Math.Sqrt(differences.Sum() / (differences.Count() - buffer));\r\n        }","var nums = new[] { 11, 12, 13, 12, 13, 15, 12, 14, 15, 15, 12, 14, 15 };\r\n            //Prints out the standard deviation of the entire data set (population)\r\n            nums.StdDevP();\r\n            //Prints out the standard deviation of the entire data set, but makes allowances for missing data points.\r\n            nums.Take(10).StdDev();"]}