{"Name":"EnumToDictionary","Description":"Converts an Enumeration type into a dictionary of its names and values.","Author":"Daniel Gidman","SubmittedOn":"12/3/2010 9:50:29 PM","Entries":["/// <summary>\r\n/// Converts Enumeration type into a dictionary of names and values\r\n/// </summary>\r\n/// <param name=\"t\">Enum type</param>\r\npublic static IDictionary<string, int> EnumToDictionary(this Type t)\r\n{\r\n    if (t == null) throw new NullReferenceException();\r\n    if (!t.IsEnum) throw new InvalidCastException(\"object is not an Enumeration\");\r\n\r\n    string[] names = Enum.GetNames(t);\r\n    Array values = Enum.GetValues(t);\r\n\r\n    return (from i in Enumerable.Range(0, names.Length)\r\n            select new { Key = names[i], Value = (int)values.GetValue(i) })\r\n                .ToDictionary(k => k.Key, k => k.Value);\r\n}","var dictionary = typeof(UriFormat).EnumToDictionary();\r\n\r\n/* returns\r\nkey => value\r\nSafeUnescaped => 3\r\nUnescaped => 2\r\nUriEscaped => 1\r\n*/"]}