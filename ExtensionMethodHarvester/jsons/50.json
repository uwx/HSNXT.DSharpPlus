{"Name":"Each<T>","Description":"iterates through an IEnumerable<T> and applies an Action","Author":"Jon Erickson","SubmittedOn":"10/14/2010 2:52:47 AM","Entries":["public static void Each<T>(this IEnumerable<T> items, Action<T> action)\r\n{\r\n    if (items == null) return;\r\n\r\n    var cached = items;\r\n\r\n    foreach (var item in cached)\r\n        action(item);\r\n}","class Item\r\n{\r\n    void DoSomething();\r\n}\r\n\r\nvar items = new List<Item>();\r\n// populate items\r\nitems.Each(item => item.DoSomething());\r\n\r\n/* OR */\r\n\r\nvar items = new List<Item>();\r\n// populate items\r\nitems.Each(DoSomething);\r\n\r\nvoid DoSomething(Item item)\r\n{\r\n    // do something to item\r\n}"]}