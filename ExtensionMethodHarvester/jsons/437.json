{"Name":"IfIs<T>","Description":"optionally executes an Action if the object is of the given type.","Author":"dave thieben","SubmittedOn":"10/24/2010 8:41:48 PM","Entries":["/// <summary>\r\n        /// allows an action to be taken on an object if it is castable as the given type, with no return value.\r\n        /// if the target does not match the type, does nothing\r\n        /// </summary>\r\n        public static void IfIs<T>( this object target, Action<T> method )\r\n            where T : class\r\n        {\r\n            var cast = target as T;\r\n            if ( cast != null )\r\n            {\r\n                method( cast );\r\n            }\r\n        }\r\n\r\n        /// <summary>\r\n        /// allows an action to be taken on an object if it is castable as the given type, with a return value.\r\n        /// if the target does not match the type, returns default(T)\r\n        /// </summary>\r\n        public static TResult IfIs<T, TResult>( this object target, Func<T, TResult> method )\r\n            where T : class\r\n        {\r\n            var cast = target as T;\r\n            if ( cast != null )\r\n            {\r\n                return method( cast );\r\n            }\r\n            else\r\n            {\r\n                return default( TResult );\r\n            }\r\n        }","item.IfIs<ILogicalDelete>( x => x.DeletedBy = User.Identity.Name );\r\n\r\nvar username = item.IfIs<IIdentity>( x => x.Name );"]}