{"Name":"QueryAsync","Description":"Returns a Task<IEnumerable<TResult>> to be used with the new async / await keyword.","Author":"Sebastian Dau","SubmittedOn":"6/13/2012 1:36:23 PM","Entries":["using System;\r\nusing System.Collections.Generic;\r\nusing System.Data.Services.Client;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace Bing\r\n{\r\n    public static class QueryExtensions\r\n    {\r\n        public static Task<IEnumerable<TResult>> QueryAsync<TResult>(this DataServiceQuery<TResult> query)\r\n        {\r\n            return Task<IEnumerable<TResult>>.Factory.FromAsync(query.BeginExecute, query.EndExecute, null);\r\n        }\r\n    }\r\n}","BingSearchContainer _bsc = new BingSearchContainer(new Uri(\"https://api.datamarket.azure.com/Bing/Search/\"));\r\n\r\nvar webQ = _bsc.Image(\"search\", null, null, null, null, null);\r\n\r\nvar result = await webQ.QueryAsync() ;"]}