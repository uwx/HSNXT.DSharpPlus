{"Name":"ToHtmlTable","Description":"Converts an IEnumberable<T> to an HTML DataTable.","Author":"Alex Friedman","SubmittedOn":"6/5/2009 6:20:18 AM","Entries":["public static string ToHtmlTable<T>(this IEnumerable<T> list, string tableSyle, string headerStyle, string rowStyle, string alternateRowStyle)\r\n        {\r\n\r\n            var result = new StringBuilder();\r\n            if (String.IsNullOrEmpty(tableSyle))\r\n            {\r\n                result.Append(\"<table id=\\\"\" + typeof(T).Name + \"Table\\\">\");\r\n            }\r\n            else\r\n            {\r\n                result.Append(\"<table id=\\\"\" + typeof(T).Name + \"Table\\\" class=\\\"\" + tableSyle + \"\\\">\");\r\n            }\r\n\r\n            var propertyArray = typeof(T).GetProperties();\r\n            foreach (var prop in propertyArray)\r\n            {\r\n                if (String.IsNullOrEmpty(headerStyle))\r\n                {\r\n                    result.AppendFormat(\"<th>{0}</th>\", prop.Name);\r\n                }\r\n                else\r\n                {\r\n                    result.AppendFormat(\"<th class=\\\"{0}\\\">{1}</th>\", headerStyle, prop.Name);\r\n                }\r\n            }\r\n\r\n            for (int i = 0; i < list.Count(); i++)\r\n            {\r\n                if (!String.IsNullOrEmpty(rowStyle) && !String.IsNullOrEmpty(alternateRowStyle))\r\n                {\r\n                    result.AppendFormat(\"<tr class=\\\"{0}\\\">\", i % 2 == 0 ? rowStyle : alternateRowStyle);\r\n                }\r\n                else\r\n                {\r\n                    result.AppendFormat(\"<tr>\");\r\n                }\r\n\r\n                foreach (var prop in propertyArray)\r\n                {\r\n                    object value = prop.GetValue(list.ElementAt(i), null);\r\n                    result.AppendFormat(\"<td>{0}</td>\", value ?? String.Empty);\r\n                }\r\n                result.AppendLine(\"</tr>\");\r\n            }\r\n            result.Append(\"</table>\");\r\n            return result.ToString();\r\n        }","public class Person\r\n    {\r\n        public string FirstName { get; set; }\r\n        public string LastName { get; set; }\r\n        public int Age { get; set; }\r\n    }\r\n        private void button1_Click(object sender, EventArgs e)\r\n        {\r\n            var personList = new List<Person>();\r\n            personList.Add(new Person\r\n            {\r\n                FirstName = \"Alex\",\r\n                LastName = \"Friedman\",\r\n                Age = 27\r\n            });\r\n            personList.Add(new Person\r\n            {\r\n                FirstName = \"Jack\",\r\n                LastName = \"Bauer\",\r\n                Age = 45\r\n\r\n            });\r\n\r\n            personList.Add(new Person\r\n            {\r\n                FirstName = \"Cloe\",\r\n                LastName = \"O'Brien\",\r\n                Age = 35\r\n            });\r\n            personList.Add(new Person\r\n            {\r\n                FirstName = \"John\",\r\n                LastName = \"Doe\",\r\n                Age = 30\r\n            });\r\n\r\n\r\n\r\n            string html = @\"<style type = \"\"text/css\"\"> .tableStyle{border: solid 5 green;} \r\nth.header{ background-color:#FF3300} tr.rowStyle { background-color:#33FFFF; \r\nborder: solid 1 black; } tr.alternate { background-color:#99FF66; \r\nborder: solid 1 black;}</style>\";\r\n            html += personList.ToHtmlTable(\"tableStyle\", \"header\", \"rowStyle\", \"alternate\");\r\n            this.webBrowser1.DocumentText = html;\r\n        }"]}