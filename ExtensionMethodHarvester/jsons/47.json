{"Name":"GetAttribute","Description":"Gets the first assembly attribute of the specified type from the assembly it is called from.","Author":"James Michael Hare (BlackRabbitCoder)","SubmittedOn":"10/14/2010 6:04:58 PM","Entries":["/// <summary>\r\n    /// Extension methods for dealing with an assembly\r\n    /// </summary>\r\n    public static class AssemblyExtensions\r\n    {\r\n        /// <summary>\r\n        /// Loads the configuration from assembly attributes\r\n        /// </summary>\r\n        /// <typeparam name=\"T\">The type of the custom attribute to find.</typeparam>\r\n        /// <param name=\"callingAssembly\">The calling assembly to search.</param>\r\n        /// <returns>The custom attribute of type T, if found.</returns>\r\n        public static T GetAttribute<T>(this Assembly callingAssembly) \r\n\t\t\twhere T : Attribute\r\n        {\r\n            T result = null;\r\n\r\n            // Try to find the configuration attribute for the default logger if it exists\r\n            object[] configAttributes = Attribute.GetCustomAttributes(callingAssembly,\r\n\t\t\t\ttypeof(T), false);\r\n\r\n            // get just the first one\r\n            if (!configAttributes.IsNullOrEmpty())\r\n            {\r\n                result = (T)configAttributes[0];\r\n            }\r\n\r\n            return result;\r\n        }\r\n    }","var attribute = Assembly.GetExecutingAssembly().GetAttribute<InstallPerformanceCounterAttribute>();"]}