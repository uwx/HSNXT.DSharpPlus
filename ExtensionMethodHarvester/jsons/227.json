{"Name":"RemoveDuplicates","Description":"Removes items from a collection based on the condition you provide. This is useful if a query gives you some duplicates that you can't seem to get rid of. Some Linq2Sql queries are an example of this. Use this method afterward to strip things you know are in the list multiple times","Author":"Chris Meijers","SubmittedOn":"10/25/2010 10:16:20 AM","Entries":["public static IEnumerable<T> RemoveDuplicates<T>(this ICollection<T> list, Func<T, int> Predicate)\r\n        {\r\n            var dict = new Dictionary<int, T>();\r\n\r\n            foreach (var item in list)\r\n            {\r\n                if (!dict.ContainsKey(Predicate(item)))\r\n                {\r\n                    dict.Add(Predicate(item), item);\r\n                }\r\n            }\r\n\r\n            return dict.Values.AsEnumerable();\r\n        }","var employees = (from x in context.Employees\r\n                 join t in context.PhonesNumbers on x.EmpId equals t.EmpId\r\n                 select new { Employee = x, Phone = t });\r\n\r\n//we now have multiple employee records if an employee had more than one phone number\r\n\r\nemployees = employees.RemoveDuplicates(x => x.EmpId);"]}