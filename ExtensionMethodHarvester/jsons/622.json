{"Name":"Ori Samara","Description":"Extracts the underylying SQL query from an IQueryable datatype","Author":"Ori Samara","SubmittedOn":"2/10/2016 3:32:45 PM","Entries":["/// <summary>\r\n        /// Extracts the underylying SQL query from an IQueryable datatype\r\n        /// </summary>\r\n        /// <param name=\"source\">https://visualstudiomagazine.com/blogs/tool-tracker/2011/11/seeing-the-sql.aspx</param>\r\n        /// <returns>Returns a SQL Query in a string datatype</returns>\r\n        public static string ToSQLQuery<T>(this IQueryable<T> source)\r\n        {\r\n            var x = IsNullOrEmpty(Convert.ToString(source)) ? \"\" : source.ToString().Replace(\"[Extent\", \"[D\");\r\n            return x;\r\n        }","var res = new List<EntityName>();\r\n            string query = \"\";\r\n            using (Entities sp = new Entities())\r\n            {\r\n                var q = sp.EntityName;\r\n                query = q.ToSQLQuery();\r\n                res = q.ToList();\r\n\r\n            }\r\n\r\n            return res;"]}