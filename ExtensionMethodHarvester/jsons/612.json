{"Name":"Follow","Description":"Follows sequence with new element","Author":"Nikoloz Pachuashvili","SubmittedOn":"12/18/2015 12:47:00 PM","Entries":["/// <summary>\r\n        /// Follows sequence with new element\r\n        /// </summary>\r\n        /// <typeparam name=\"TSource\">Source sequence element type</typeparam>\r\n        /// <param name=\"sequence\">Source sequence</param>\r\n        /// <param name=\"value\">New element value</param>\r\n        /// <returns>Sequence with new last element</returns>\r\n        public static IEnumerable<TSource> Follow<TSource>(this IEnumerable<TSource> sequence, TSource value)\r\n        {\r\n            foreach (var item in sequence)\r\n            {\r\n                yield return item;\r\n            }\r\n\r\n            yield return value;\r\n        }\r\n        {\r\n            var i = 0;\r\n\r\n            while (true)\r\n            {\r\n                yield return @this.AddMonths(++i * step);\r\n            }\r\n            // ReSharper disable once FunctionNeverReturns\r\n        }","var list = new List<int> {1, 2, 3};\r\n\r\nlist.Follow(4);"]}