{"Name":"ResizeAndFit","Description":"This method resizes a System.Drawing.Image and tries to fit it in the destination Size. The source image size may be smaller or bigger then the target size. Source and target layout orientation can be different. ResizeAndFit tries to fit it the best it can.","Author":"Loek van den Ouweland","SubmittedOn":"2/13/2009 12:51:14 PM","Entries":["public static Image ResizeAndFit(this Image image, Size newSize)\r\n{\r\n    var sourceIsLandscape = image.Width > image.Height;\r\n    var targetIsLandscape = newSize.Width > newSize.Height;\r\n\r\n    var ratioWidth = (double)newSize.Width / (double)image.Width;\r\n    var ratioHeight = (double)newSize.Height / (double)image.Height;\r\n\r\n    var ratio = 0.0;\r\n\r\n    if (ratioWidth > ratioHeight && sourceIsLandscape==targetIsLandscape)\r\n        ratio = ratioWidth;\r\n    else\r\n        ratio = ratioHeight;\r\n\r\n    int targetWidth = (int)(image.Width * ratio);\r\n    int targetHeight = (int)(image.Height * ratio);\r\n\r\n    var bitmap = new Bitmap(newSize.Width, newSize.Height);\r\n    var graphics = Graphics.FromImage((Image)bitmap);\r\n    \r\n    graphics.InterpolationMode = InterpolationMode.HighQualityBicubic;\r\n\r\n    var offsetX = ((double)(newSize.Width - targetWidth)) / 2;\r\n    var offsetY = ((double)(newSize.Height - targetHeight)) / 2;\r\n\r\n    graphics.DrawImage(image, (int)offsetX, (int)offsetY, targetWidth, targetHeight);\r\n    graphics.Dispose();\r\n\r\n    return (Image)bitmap;\r\n}","Image image = Image.FromStream(context.Request.InputStream).ResizeAndFit(new Size( 125, 100));"]}