{"Name":"None(), OneOf(), Many(), XOf()","Description":"Count-based extensions which make checking the length of something more readable. * Updated on 2010-01-16 following suggestion from @Sane regarding the use of Count() in None(). Switched to Any(). Thanks!","Author":"Dan Atkinson","SubmittedOn":"1/9/2010 2:26:45 PM","Entries":["public static class LinqExtensions\r\n{\r\n  public static bool None<T>(this IEnumerable<T> source)\r\n  {\r\n\treturn source.Any() == false;\r\n  }\r\n\r\n  public static bool None<T>(this IEnumerable<T> source, Func<T, bool> query)\r\n  {\r\n\treturn source.Any(query) == false;\r\n  }\r\n\r\n  public static bool Many<T>(this IEnumerable<T> source)\r\n  {\r\n\treturn source.Count() > 1;\r\n  }\r\n\r\n  public static bool Many<T>(this IEnumerable<T> source, Func<T, bool> query)\r\n  {\r\n\treturn source.Count(query) > 1;\r\n  }\r\n\r\n  public static bool OneOf<T>(this IEnumerable<T> source)\r\n  {\r\n\treturn source.Count() == 1;\r\n  }\r\n\r\n  public static bool OneOf<T>(this IEnumerable<T> source, Func<T, bool> query)\r\n  {\r\n\treturn source.Count(query) == 1;\r\n  }\r\n\r\n  public static bool XOf<T>(this IEnumerable<T> source, int count)\r\n  {\r\n\treturn source.Count() == count;\r\n  }\r\n\r\n  public static bool XOf<T>(this IEnumerable<T> source, Func<T, bool> query, int count)\r\n  {\r\n\treturn source.Count(query) == count;\r\n  }\r\n}","List<string> myList = new List<string>() { \"foo\", \"bar\", \"fong\", \"foo\" };\r\n\r\n//returns false\r\nmyList.None();\r\n\r\n//returns false\r\nmyList.None(x=> x == \"bar\");\r\n\r\n//returns true\r\nmyList.None(x=> x == \"bang\");\r\n\r\n//returns true\r\nmyList.Many();\r\n\r\n//returns true\r\nmyList.Many(x=> x == \"foo\");\r\n\r\n//returns false\r\nmyList.Many(x=> x == \"bar\");\r\n\r\n//returns false\r\nmyList.OneOf();\r\n\r\n//returns false\r\nmyList.OneOf(x=> x == \"foo\");\r\n\r\n//returns true\r\nmyList.OneOf(x=> x == \"bar\");\r\n\r\n//returns true\r\nmyList.Xof(4);\r\n\r\n//returns true\r\nmyList.XOf(x=> x == \"foo\", 2);\r\n\r\n//returns false\r\nmyList.XOf(x=> x == \"foo\", 3);"]}