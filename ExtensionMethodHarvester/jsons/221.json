{"Name":"ToFriendlyDateString","Description":"The idea behind the ToFriendlyDateString() method is representing dates in a user friendly way. For example, when displaying a news article on a webpage, you might want articles that were published one day ago to have their publish dates represented as \"yesterday at 12:30 PM\". Or if the article was publish today, show the date as \"Today, 3:33 PM\".","Author":"jaycent","SubmittedOn":"2/12/2008 10:21:15 PM","Entries":["namespace Utils\r\n{\r\n     public static class Extensions\r\n        {\r\n             public static string ToFriendlyDateString(this DateTime Date) \r\n             {\r\n                    string FormattedDate = \"\";\r\n                    if (Date.Date == DateTime.Today)\r\n                    {\r\n                           FormattedDate = \"Today\";\r\n                    }\r\n                    else if (Date.Date == DateTime.Today.AddDays(-1)) \r\n                    {\r\n                           FormattedDate = \"Yesterday\"; \r\n                    }\r\n                    else if (Date.Date > DateTime.Today.AddDays(-6)) \r\n                    {\r\n                           // *** Show the Day of the week\r\n                          FormattedDate = Date.ToString(\"dddd\").ToString(); \r\n                    }\r\n                    else\r\n                    {\r\n                          FormattedDate = Date.ToString(\"MMMM dd, yyyy\"); \r\n                    }\r\n\r\n                   //append the time portion to the output\r\n                  FormattedDate += \" @ \" + Date.ToString(\"t\").ToLower();\r\n                  return FormattedDate; \r\n             }\r\n        }\r\n}","using Utils;\r\n\r\n......\r\n\r\nDateTime dt = new DateTime(2008, 2, 10, 8, 48, 20);\r\nConsole.WriteLine(dt.ToFriendlyDateString());"]}