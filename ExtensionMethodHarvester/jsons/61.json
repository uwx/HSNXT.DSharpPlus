{"Name":"SetCookie(), GetCookie(), DeleteCookie()","Description":"Extension methods on HtmlDocument used to read, write and delete cookies in Silverlight applications.","Author":"Fons Sonnemans","SubmittedOn":"12/10/2008 10:30:08 AM","Entries":["using System;\r\nusing System.Windows.Browser;\r\n\r\n// Source: http://www.eggheadcafe.com/community/aspnet/12/10035916/retrieve-and-delete-cooki.aspx \r\nnamespace CookiesDemo {\r\n\r\n    public static class CookieExtensions {\r\n\r\n        /// <summary>\r\n        /// Sets a persistent cookie which expires after the given number of days\r\n        /// </summary>\r\n        /// <param name=\"doc\">The HtmDocument to extend</param>\r\n        /// <param name=\"key\">the cookie key</param>\r\n        /// <param name=\"value\">the cookie value</param>\r\n        /// <param name=\"days\">The number of days before the cookie expires</param>\r\n        public static void SetCookie(this HtmlDocument doc, string key, string value, int days) {\r\n            DateTime expiration = DateTime.UtcNow + TimeSpan.FromDays(days);\r\n            SetCookie(doc, key, value, expiration);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Sets a persistent cookie with an expiration date\r\n        /// </summary>\r\n        /// <param name=\"doc\">The HtmDocument to extend</param>\r\n        /// <param name=\"key\">the cookie key</param>\r\n        /// <param name=\"value\">the cookie value</param>\r\n        public static void SetCookie(this HtmlDocument doc, string key, string value, DateTime expiration) {\r\n            string oldCookie = doc.GetProperty(\"cookie\") as String;\r\n            string cookie = String.Format(\"{0}={1};expires={2}\", key, value, expiration.ToString(\"R\"));\r\n            doc.SetProperty(\"cookie\", cookie);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Retrieves an existing cookie\r\n        /// </summary>\r\n        /// <param name=\"doc\">The HtmDocument to extend</param>\r\n        /// <param name=\"key\">cookie key</param>\r\n        /// <returns>null if the cookie does not exist, otherwise the cookie value</returns>\r\n        public static string GetCookie(this HtmlDocument doc, string key) {\r\n            string[] cookies = doc.Cookies.Split(';');\r\n            key += '=';\r\n            foreach (string cookie in cookies) {\r\n                string cookieStr = cookie.Trim();\r\n                if (cookieStr.StartsWith(key, StringComparison.OrdinalIgnoreCase)) {\r\n                    string[] vals = cookieStr.Split('=');\r\n\r\n                    if (vals.Length >= 2) {\r\n                        return vals[1];\r\n                    }\r\n\r\n                    return string.Empty;\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        /// <summary>\r\n        /// Deletes a specified cookie by setting its value to empty and expiration to -1 days\r\n        /// </summary>\r\n        /// <param name=\"doc\">The HtmDocument to extend</param>\r\n        /// <param name=\"key\">the cookie key to delete</param>\r\n        public static void DeleteCookie(this HtmlDocument doc, string key) {\r\n            string oldCookie = doc.GetProperty(\"cookie\") as String;\r\n            DateTime expiration = DateTime.UtcNow - TimeSpan.FromDays(1);\r\n            string cookie = String.Format(\"{0}=;expires={1}\", key, expiration.ToString(\"R\"));\r\n            doc.SetProperty(\"cookie\", cookie);\r\n        }\r\n    }\r\n}","HtmlPage.Document.SetCookie(\"key\", \"example\", 5);\r\n\r\nstring value = HtmlPage.Document.GetCookie(\"key\");"]}