{"Name":"ToNullable","Description":"Converts a string to a primitive type or an enum type. Faster than tryparse blocks. Easier to use, too. Very efficient.","Author":"Taylor Love","SubmittedOn":"4/6/2016 2:46:04 AM","Entries":["using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Web;\r\n\r\nnamespace TodoList\r\n{\r\n    public static class ToNullableStringExtension\r\n    {\r\n        public static T? ToNullable<T>(this string p_self) where T : struct\r\n        {\r\n            if (p_self != null)\r\n            {\r\n                var converter = System.ComponentModel.TypeDescriptor.GetConverter(typeof(T));\r\n                if (converter.IsValid(p_self))\r\n                {\r\n                    return (T)converter.ConvertFromString(p_self);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n}","int? numVotes = \"123\".ToNullable<int>();\r\ndecimal price = tbxPrice.Text.ToNullable<decimal>() ?? 0.0M;\r\nPetTypeEnum petType = \"Cat\".ToNullable<PetTypeEnum>() ?? PetTypeEnum.DefaultPetType;\r\n\r\nstring thisWillNotThrowException = null;\r\nint? nullsAreSafe = thisWillNotThrowException.ToNullable<int>();"]}