{"Name":"ToPagedList","Description":"Paging extension method for NHibernate 3.0 and its new query API QueryOver.","Author":"Alexander Tank","SubmittedOn":"11/1/2010 10:34:02 AM","Entries":["public static class QueryOverExtensions\r\n    public static PagedList<T> ToPagedList<T>(this IQueryOver<T, T> queryOver, int pageIndex, int pageSize)\r\n    {\r\n        var rowCountQuery = queryOver.ToRowCountQuery();\r\n        IEnumerable<T> list = queryOver.Take(pageSize).Skip((pageIndex - 1) * pageSize).Future();\r\n        int totalCount = rowCountQuery.FutureValue<int>().Value;\r\n\r\n        return new PagedList<T>(list, pageIndex, pageSize, totalCount);\r\n    }\r\n}","public class TeamEmployeeRepository : Repository<TeamEmployee>, ITeamEmployeeRepository\r\n{\r\n    public PagedList<TeamEmployee> GetPagedEmployees(int pageIndex, int pageSize)\r\n    {\r\n        return GetSession().QueryOver<TeamEmployee>()\r\n            .Fetch(x => x.Employee).Eager\r\n            .Fetch(x => x.Team).Eager\r\n            .ToPagedList(pageIndex, pageSize);\r\n    }\r\n}"]}