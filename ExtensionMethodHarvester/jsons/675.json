{"Name":"Aspose.Word","Description":"Is a Extension for the ASPOS Word API.","Author":"Alain Sch√§rer","SubmittedOn":"4/18/2017 3:10:11 PM","Entries":["/// <summary>\r\n    /// Helper Class to make it easier with aspose word\r\n    /// </summary>\r\n    public static class AsposeWordExtension\r\n    {\r\n        #region Document\r\n        /// <summary>\r\n        /// Add a blank paragraph to the document\r\n        /// </summary>\r\n        /// <param name=\"doc\"></param>\r\n        public static void AddBlankParagraph(this Document doc)\r\n        {\r\n            Paragraph paragraph = new Paragraph(doc);\r\n            doc.LastSection.Body.AppendChild(paragraph);\r\n        }\r\n        #endregion\r\n\r\n        #region Paragraph\r\n        /// <summary>\r\n        /// Add one run to the paragraph, and set the run with properties\r\n        /// </summary>\r\n        /// <param name=\"paragraph\">the paragraph object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"isBold\">is the font style bold</param>\r\n        /// <param name=\"isItalic\">is the font style italic</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        /// <param name=\"comment\">add a comment to the paragraph</param>\r\n        public static void AddRun(this Paragraph paragraph, string text, int size, bool isBold, bool isItalic, string fontName = \"Arial\", Comment comment = null)\r\n        {\r\n            Run run = new Run(paragraph.Document);\r\n            run.SetRun(text, size, isBold, isItalic, fontName);\r\n            paragraph.AppendChild(run);\r\n            if (comment != null)\r\n            {\r\n                paragraph.AppendChild(comment);\r\n            }\r\n        }\r\n\r\n        /// <summary>\r\n        /// Add one run to the paragraph, and set the run with properties\r\n        /// </summary>\r\n        /// <param name=\"paragraph\">the paragraph object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        /// <param name=\"comment\">add a comment to the paragraph</param>\r\n        public static void AddRun(this Paragraph paragraph, string text, int size, string fontName = \"Arial\", Comment comment = null)\r\n        {\r\n            paragraph.AddRun(text, size, false, false, fontName, comment);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Add one run to the paragraph, and set the run with font style bold\r\n        /// </summary>\r\n        /// <param name=\"paragraph\">the paragraph object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        /// <param name=\"comment\">add a comment to the paragraph</param>\r\n        public static void AddRunBold(this Paragraph paragraph, string text, int size, string fontName = \"Arial\", Comment comment = null)\r\n        {\r\n            paragraph.AddRun(text, size, true, false, fontName, comment);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Add one run to the paragraph, and set the run with font style italic\r\n        /// </summary>\r\n        /// <param name=\"paragraph\">the paragraph object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        /// <param name=\"comment\">add a comment to the paragraph</param>\r\n        public static void AddRunItalic(this Paragraph paragraph, string text, int size, string fontName = \"Arial\", Comment comment = null)\r\n        {\r\n            paragraph.AddRun(text, size, false, true, fontName, comment);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Add one run to the paragraph, and set the run with font style bold and italic\r\n        /// </summary>\r\n        /// <param name=\"paragraph\">the paragraph object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        /// <param name=\"comment\">add a comment to the paragraph</param>\r\n        public static void AddRunBoldItalic(this Paragraph paragraph, string text, int size, string fontName = \"Arial\", Comment comment = null)\r\n        {\r\n            paragraph.AddRun(text, size, true, true, fontName, comment);\r\n        }\r\n        #endregion\r\n\r\n        #region Cell\r\n        /// <summary>\r\n        /// Add html text to the cell, if don't have html text add normal text with the font size\r\n        /// </summary>\r\n        /// <param name=\"cell\">the cell object</param>\r\n        /// <param name=\"htmlText\">html text</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        public static void AddHtmlText(this Cell cell, string htmlText, int size, string fontName = \"Arial\")\r\n        {\r\n            if (string.IsNullOrEmpty(htmlText))\r\n            {\r\n                cell.AddBlankParagraph();\r\n                return;\r\n            }\r\n            // Check if has html text\r\n            if (htmlText.Contains(\"<text>\") || htmlText.Contains(\"<p>\") || htmlText.Contains(\"<body>\") || htmlText.Contains(\"<html\"))\r\n            {\r\n                htmlText = \"<!DOCTYPE html><html lang='de'><head><style>body { font-family:\" + fontName + \"; font-size: \" + (size + 2) + \"px; } </style></head><body>\" + htmlText + \"</body></html>\";\r\n            MemoryStream stream = new MemoryStream();\r\n            StreamWriter writer = new StreamWriter(stream);\r\n            writer.Write(htmlText);\r\n            writer.Flush();\r\n            stream.Position = 0;\r\n                Document htmlDoc = new Document(stream);\r\n                NodeCollection paragraphs = htmlDoc.GetChildNodes(NodeType.Paragraph, true);\r\n                foreach (Node node in paragraphs)\r\n                {\r\n                    Node newNode = cell.Document.ImportNode(node, true, ImportFormatMode.KeepSourceFormatting);\r\n                    cell.AppendChild(newNode);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                cell.AddParagraph(htmlText, size);\r\n            }\r\n        }\r\n        /// <summary>\r\n        /// Add a blank paragraph to the cell\r\n        /// </summary>\r\n        /// <param name=\"cell\">the cell object</param>\r\n        public static void AddBlankParagraph(this Cell cell)\r\n        {\r\n            Paragraph paragraph = new Paragraph(cell.Document);\r\n            cell.AppendChild(paragraph);\r\n        }\r\n        /// <summary>\r\n        /// Add one paragraph to the cell, and set the run with properties\r\n        /// </summary>\r\n        /// <param name=\"cell\">the cell object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"isBold\">is the font style bold</param>\r\n        /// <param name=\"isItalic\">is the font style italic</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        /// <param name=\"comment\">add a comment to the paragraph</param>\r\n        public static void AddParagraph(this Cell cell, string text, int size, bool isBold, bool isItalic, string fontName = \"Arial\", Comment comment = null)\r\n        {\r\n            Paragraph paragraph = new Paragraph(cell.Document);\r\n            paragraph.AddRun(text, size, isBold, isItalic, fontName, comment);\r\n            cell.AppendChild(paragraph);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Add one paragraph to the cell, and set the run with properties\r\n        /// </summary>\r\n        /// <param name=\"cell\">the cell object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        /// <param name=\"comment\">add a comment to the paragraph</param>\r\n        public static void AddParagraph(this Cell cell, string text, int size, string fontName = \"Arial\", Comment comment = null)\r\n        {\r\n            Paragraph paragraph = new Paragraph(cell.Document);\r\n            paragraph.AddRun(text, size, false, false, fontName, comment);\r\n            cell.AppendChild(paragraph);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Add one paragraph to the cell, and set the run with font style bold\r\n        /// </summary>\r\n        /// <param name=\"cell\">the cell object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        /// <param name=\"comment\">add a comment to the paragraph</param>\r\n        public static void AddParagraphBold(this Cell cell, string text, int size, string fontName = \"Arial\", Comment comment = null)\r\n        {\r\n            Paragraph paragraph = new Paragraph(cell.Document);\r\n            paragraph.AddRunBold(text, size, fontName, comment);\r\n            cell.AppendChild(paragraph);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Add one paragraph to the cell, and set the run with font style italic\r\n        /// </summary>\r\n        /// <param name=\"cell\">the cell object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        /// <param name=\"comment\">add a comment to the paragraph</param>\r\n        public static void AddParagraphItalic(this Cell cell, string text, int size, string fontName = \"Arial\", Comment comment = null)\r\n        {\r\n            Paragraph paragraph = new Paragraph(cell.Document);\r\n            paragraph.AddRunItalic(text, size, fontName, comment);\r\n            cell.AppendChild(paragraph);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Add one paragraph to the cell, and set the run with font style bold and italic\r\n        /// </summary>\r\n        /// <param name=\"cell\">the cell object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        /// <param name=\"comment\">add a comment to the paragraph</param>\r\n        public static void AddParagraphBoldItalic(this Cell cell, string text, int size, string fontName = \"Arial\", Comment comment = null)\r\n        {\r\n            Paragraph paragraph = new Paragraph(cell.Document);\r\n            paragraph.AddRunBoldItalic(text, size, fontName, comment);\r\n            cell.AppendChild(paragraph);\r\n        }\r\n        #endregion\r\n\r\n        #region Run\r\n        /// <summary>\r\n        /// Set the run with properties\r\n        /// </summary>\r\n        /// <param name=\"run\">the run object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"isBold\">is the font style bold</param>\r\n        /// <param name=\"isItalic\">is the font style italic</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        public static void SetRun(this Run run ,string text, int size, bool isBold, bool isItalic, string fontName=\"Arial\")\r\n        {\r\n            run.Text = (!string.IsNullOrEmpty(text)) ? text : string.Empty;\r\n            run.Font.Bold = isBold;\r\n            run.Font.Italic = isItalic;\r\n            run.Font.Size = size;\r\n            run.Font.Name = fontName;\r\n        }\r\n\r\n        /// <summary>\r\n        /// Set the run with properties\r\n        /// </summary>\r\n        /// <param name=\"run\">the run object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        public static void SetRun(this Run run, string text, int size, string fontName = \"Arial\")\r\n        {\r\n            run.SetRun(text, size, false, false, fontName);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Set the run with font style bold\r\n        /// </summary>\r\n        /// <param name=\"run\">the run object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        public static void SetRunBold(this Run run, string text, int size, string fontName = \"Arial\")\r\n        {\r\n            run.SetRun(text, size, true, false, fontName);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Set the run with font style italic\r\n        /// </summary>\r\n        /// <param name=\"run\">the run object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        public static void SetRunItalic(this Run run, string text, int size, string fontName = \"Arial\")\r\n        {\r\n            run.SetRun(text, size, false, true, fontName);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Set the run with font style bold and italic\r\n        /// </summary>\r\n        /// <param name=\"run\">the run object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        public static void SetRunBoldItalic(this Run run, string text, int size, string fontName = \"Arial\")\r\n        {\r\n            run.SetRun(text, size, true, true, fontName);\r\n        }\r\n        #endregion\r\n\r\n        #region Comment\r\n        /// <summary>\r\n        /// Add html text to the comment, if don't have html text add normal text with the font size\r\n        /// </summary>\r\n        /// <param name=\"comment\">the comment object</param>\r\n        /// <param name=\"htmlText\">html text</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        public static void AddHtmlText(this Comment comment, string htmlText, int size, string fontName = \"Arial\")\r\n        {\r\n            if (string.IsNullOrEmpty(htmlText))\r\n            {\r\n                return;\r\n            }\r\n            // Check if has html text\r\n            if (htmlText.Contains(\"<text>\") || htmlText.Contains(\"<p>\") || htmlText.Contains(\"<body>\") || htmlText.Contains(\"<html\"))\r\n            {\r\n                htmlText = \"<!DOCTYPE html><html lang='de'><head><style>body { font-family:\" + fontName + \"; font-size: \" + (size + 2) + \"px; } </style></head><body>\" + htmlText + \"</body></html>\";\r\n                MemoryStream stream = new MemoryStream();\r\n            StreamWriter writer = new StreamWriter(stream);\r\n            writer.Write(htmlText);\r\n            writer.Flush();\r\n            stream.Position = 0;\r\n                Document htmlDoc = new Document(stream);\r\n                NodeCollection paragraphs = htmlDoc.GetChildNodes(NodeType.Paragraph, true);\r\n                foreach (Node node in paragraphs)\r\n                {\r\n                    Node newNode = comment.Document.ImportNode(node, true, ImportFormatMode.KeepSourceFormatting);\r\n                    comment.AppendChild(newNode);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                comment.AddParagraph(htmlText, size);\r\n            }\r\n        }\r\n        /// <summary>\r\n        /// Add one paragraph to the comment\r\n        /// </summary>\r\n        /// <param name=\"comment\">the comment object</param>\r\n        /// <param name=\"paragraph\">the paragraph</param>\r\n        public static void AddParagraph(this Comment comment, Paragraph paragraph)\r\n        {\r\n            comment.Paragraphs.Add(paragraph);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Add one paragraph to the comment, and set the run text and the font size\r\n        /// </summary>\r\n        /// <param name=\"comment\">the comment object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        public static void AddParagraph(this Comment comment, string text, int size)\r\n        {\r\n            comment.AddParagraph(text, size, false, false);\r\n        }\r\n\r\n        /// <summary>\r\n        /// Add one paragraph to the comment, and set the run with properties\r\n        /// </summary>\r\n        /// <param name=\"comment\">the comment object</param>\r\n        /// <param name=\"text\">text for set</param>\r\n        /// <param name=\"size\">font size</param>\r\n        /// <param name=\"isBold\">is the font style bold</param>\r\n        /// <param name=\"isItalic\">is the font style italic</param>\r\n        /// <param name=\"fontName\">font name, default is \"Arial\"</param>\r\n        public static void AddParagraph(this Comment comment, string text, int size, bool isBold, bool isItalic, string fontName = \"Arial\")\r\n        {\r\n            Paragraph paragraph = new Paragraph(comment.Document);\r\n            paragraph.AddRun(text, size, isBold, isItalic, fontName);\r\n            comment.Paragraphs.Add(paragraph);\r\n        }\r\n        #endregion\r\n    }","Document Doc = new Document();\r\nRow row = new Row(Doc);\r\nCell cell = new Cell(Doc);\r\nComment comment = new Comment(Doc, \"Hans Muster\", \"HM\", DateTime.Now);\r\ncomment.AddHtmlText(\"New comment text\", 9);\r\ncell.AddParagraph(\"Test Text\", 9, \"Arial\", comment);\r\nrow.AppendChild(cell);"]}