{"Name":"GetUri","Description":"Get the uri to an file","Author":"Dave Smits","SubmittedOn":"5/6/2014 11:58:48 AM","Entries":["public static class StorageFileExtensions\r\n    {\r\n        public static Uri GetUri(this IStorageFile file)\r\n        {\r\n            return new Uri(string.Format(\"ms-appdata:///{0}\", FindFilePath(file)));\r\n        }\r\n\r\n        private static string FindFilePath(IStorageFile file)\r\n        {\r\n            string pathLocalFolder = ApplicationData.Current.LocalFolder.Path;\r\n            string pathRoamingFolder = ApplicationData.Current.RoamingFolder.Path;\r\n\r\n            if (file.Path.StartsWith(pathLocalFolder))\r\n            {\r\n                return GeneratePath(\"local\", file.Path, pathLocalFolder);\r\n            }\r\n            if (file.Path.StartsWith(pathRoamingFolder))\r\n            {\r\n                return GeneratePath(\"roaming\", file.Path, pathLocalFolder);\r\n            }\r\n            throw new ArgumentException(\"file not compatible\");\r\n        }\r\n\r\n        private static string GeneratePath(string type, string fullpath, string containerPath)\r\n        {\r\n            var path = fullpath.Substring(containerPath.Length);\r\n            return string.Format(\"{0}{1}\", type, path.Replace('\\\\', '/'));\r\n        }\r\n    }","var newfolder = await ApplicationData.Current.LocalFolder.CreateFolderAsync(\"new folder\");\r\n            var newfile = await newfolder.CreateFileAsync(\"testfile\");\r\n            Uri uri = newfile.GetUri();"]}