{"Name":"IsNullable","Description":"Returns true if the type it is called upon is a System.Nullable<> wrapped type.","Author":"James Michael Hare (BlackRabbitCoder)","SubmittedOn":"10/14/2010 6:21:12 PM","Entries":["using System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\n\r\n\r\n/// <summary>\r\n/// Extension methods for the Type class\r\n/// </summary>\r\npublic static class TypeExtensions\r\n{\r\n    /// <summary>\r\n    /// Return true if the type is a System.Nullable wrapper of a value type\r\n    /// </summary>\r\n    /// <param name=\"type\">The type to check</param>\r\n    /// <returns>True if the type is a System.Nullable wrapper</returns>\r\n    public static bool IsNullable(this Type type)\r\n    {\r\n        return type.IsGenericType \r\n               && (type.GetGenericTypeDefinition() == typeof(Nullable<>));\r\n    }\r\n}","// false\r\nif (typeof(int).IsNullable())\r\n{\r\n...\r\n}\r\n\r\n// true\r\nif (typeof(int?).IsNullable())\r\n{\r\n...\r\n}"]}