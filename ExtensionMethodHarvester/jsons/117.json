{"Name":"Linkify","Description":"Takes a string of text and replaces text matching a link pattern to a hyperlink","Author":"Andy T","SubmittedOn":"5/6/2011 3:57:13 PM","Entries":["public static class LinkExtension {\r\n    private readonly static Regex domainRegex = new Regex( @\"(((?<scheme>http(s)?):\\/\\/)?([\\w-]+?\\.\\w+)+([a-zA-Z0-9\\~\\!\\@\\#\\$\\%\\^\\&amp;\\*\\(\\)_\\-\\=\\+\\\\\\/\\?\\.\\:\\;\\,]*)?)\", RegexOptions.Compiled | RegexOptions.Multiline );\r\n\r\n    public static string Linkify( this string text, string target = \"_self\") {\r\n        return domainRegex.Replace(\r\n            text,\r\n            match => {\r\n                var link = match.ToString();\r\n                var scheme = match.Groups[\"scheme\"].Value == \"https\" ? Uri.UriSchemeHttps : Uri.UriSchemeHttp;\r\n                \r\n                var url = new UriBuilder( link ) { Scheme = scheme }.Uri.ToString();\r\n                                \r\n                return string.Format( @\"<a href=\"\"{0}\"\" target=\"\"{1}\"\">{2}</a>\", url, target, link );\r\n            }\r\n        );\r\n    }\r\n}","void Main() {   \r\n    Console.WriteLine( \"This goes to the https://www.test.com website\".Linkify() );\r\n    Console.WriteLine( \"This goes to the http://www.test.com website\".Linkify(\"_blank\") );\r\n    Console.WriteLine( \"This goes to the www.test.com website\".Linkify() );\r\n    Console.WriteLine( \"This goes to the test.com website\".Linkify(\"_blank\") );\r\n    Console.WriteLine( \"This goes to the test.com/page.html page\".Linkify() );\r\n    Console.WriteLine( \"This goes to the https://wwwtest.com/folder/page.html page\".Linkify(\"_blank\") );\r\n}"]}