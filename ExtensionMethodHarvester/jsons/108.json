{"Name":"Get MaxLength attribute from property of an class","Description":"Method returns the max length specificed for property","Author":"A.Ben","SubmittedOn":"10/23/2013 7:54:35 AM","Entries":["public static class AttributesExtensions\r\n    {\r\n        public static int GetMaxLength<TSource, TProperty>(this TSource source, Expression<Func<TSource, TProperty>> propertyLambda)\r\n            where TSource : class, new()\r\n            where TProperty : IComparable, ICloneable, IConvertible, IComparable<string>, IEnumerable<char>, IEnumerable, IEquatable<string>\r\n        {\r\n            PropertyInfo propInfo = source.GetPropertyInfo(propertyLambda);\r\n            MaxlengthAttribute attrMaxLength = propInfo.GetCustomAttributes(typeof(MaxlengthAttribute), false).FirstOrDefault() as MaxlengthAttribute;\r\n            return attrMaxLength != null ? attrMaxLength.MaxLength : 0;\r\n        }\r\n    }","usage :\r\npublic class Examp\r\n{\r\n[MaxLength(10)]\r\npublic string Nume {get;set;}\r\n\r\npublic int virsta{get;set;}\r\n\r\n}\r\nretriving it\r\nexamp e = new examp();\r\nint max = e.GetMaxLength(x=>x.Nume);"]}