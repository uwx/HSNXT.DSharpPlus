{"Name":"CountOf","Description":"Returns whether the sequence contains a certain amount of elements, without having to traverse the entire collection.","Author":"Steven Jeuris","SubmittedOn":"11/15/2011 9:35:39 AM","Entries":["/// <summary>\r\n///   Returns whether the sequence contains a certain amount of elements.\r\n/// </summary>\r\n/// <typeparam name = \"T\">The type of the elements of the input sequence.</typeparam>\r\n/// <param name = \"source\">The source for this extension method.</param>\r\n/// <param name = \"count\">The amount of elements the sequence should contain.</param>\r\n/// <returns>True when the sequence contains the specified amount of elements, false otherwise.</returns>\r\npublic static bool CountOf<T>( this IEnumerable<T> source, int count )\r\n{\r\n\tContract.Requires( source != null );\r\n\tContract.Requires( count >= 0 );\r\n\r\n\treturn source.Take( count + 1 ).Count() == count;\r\n}","int[] bigCollection = new[] { 0, 1, 2, 3, 4, .... int.MaxValue };\r\nbool hasTen = bigCollection.CountOf( 10 ); // true"]}