{"Name":"ToNameValueCollection","Description":"Splits a string into a NameValueCollection, where each \"namevalue\" is separated by the \"OuterSeparator\". The parameter \"NameValueSeparator\" sets the split between Name and Value.","Author":"Jonnidip","SubmittedOn":"5/28/2009 12:51:04 PM","Entries":["/// <summary>\r\n/// Splits a string into a NameValueCollection, where each \"namevalue\" is separated by\r\n/// the \"OuterSeparator\". The parameter \"NameValueSeparator\" sets the split between Name and Value.\r\n/// Example: \r\n///             String str = \"param1=value1;param2=value2\";\r\n///             NameValueCollection nvOut = str.ToNameValueCollection(';', '=');\r\n///             \r\n/// The result is a NameValueCollection where:\r\n///             key[0] is \"param1\" and value[0] is \"value1\"\r\n///             key[1] is \"param2\" and value[1] is \"value2\"\r\n/// </summary>\r\n/// <param name=\"str\">String to process</param>\r\n/// <param name=\"OuterSeparator\">Separator for each \"NameValue\"</param>\r\n/// <param name=\"NameValueSeparator\">Separator for Name/Value splitting</param>\r\n/// <returns></returns>\r\npublic static NameValueCollection ToNameValueCollection(this String str, Char OuterSeparator, Char NameValueSeparator)\r\n{\r\n    NameValueCollection nvText = null;\r\n    str = str.TrimEnd(OuterSeparator);\r\n    if (!String.IsNullOrEmpty(str))\r\n    {\r\n        String[] arrStrings = str.TrimEnd(OuterSeparator).Split(OuterSeparator);\r\n\r\n        foreach (String s in arrStrings)\r\n        {\r\n            Int32 posSep = s.IndexOf(NameValueSeparator);\r\n            String name = s.Substring(0, posSep);\r\n            String value = s.Substring(posSep + 1);\r\n            if (nvText == null)\r\n                nvText = new NameValueCollection();\r\n            nvText.Add(name, value);\r\n        }\r\n    }\r\n    return nvText;\r\n}","String a = \"param1=value1;param2=value2\";\r\nNameValueCollection nv = a.ToNameValueCollection(';', '=');"]}