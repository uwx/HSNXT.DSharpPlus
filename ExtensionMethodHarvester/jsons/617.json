{"Name":"Delegate Type Casting Extension Methods","Description":"These extension methods enable type casting between generic Action, generic Func, EventHandler, generic EventHandler and non-generic Action, non-generic Func, non-generic EventHandler as well as generic EventHandler and non generic EventHandler delegates in mscorlib and System.dll assembly.","Author":"rkttu","SubmittedOn":"2/7/2016 2:54:18 PM","Entries":["using System;\r\nusing System.Collections.Specialized;\r\nusing System.ComponentModel;\r\nusing System.ComponentModel.Design;\r\nusing System.ComponentModel.Design.Serialization;\r\nusing System.Configuration;\r\nusing System.Diagnostics;\r\nusing System.IO;\r\nusing System.IO.Pipes;\r\nusing System.IO.Ports;\r\nusing System.Net;\r\nusing System.Net.Mail;\r\nusing System.Net.NetworkInformation;\r\nusing System.Net.Security;\r\nusing System.Reflection;\r\nusing System.Runtime.InteropServices;\r\nusing System.Runtime.Remoting.Contexts;\r\nusing System.Runtime.Remoting.Messaging;\r\nusing System.Security.Cryptography.X509Certificates;\r\nusing System.Text.RegularExpressions;\r\nusing System.Threading;\r\nusing System.Timers;\r\n\r\npublic static class DelegateCastingExtensions\r\n{\r\n    public static AppDomainInitializer ToAppDomainInitializer(\r\n        this Action<string[]> action)\r\n    {\r\n        return new AppDomainInitializer(action.Invoke);\r\n    }\r\n\r\n    public static Action<string[]> ToAction(\r\n        this AppDomainInitializer @delegate)\r\n    {\r\n        return new Action<string[]>(@delegate.Invoke);\r\n    }\r\n\r\n    public static AssemblyLoadEventHandler ToAssemblyEventHandler(\r\n        this Action<object, AssemblyLoadEventArgs> action)\r\n    {\r\n        return new AssemblyLoadEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, AssemblyLoadEventArgs> ToAction(\r\n        this AssemblyLoadEventHandler @delegate)\r\n    {\r\n        return new Action<object, AssemblyLoadEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static AsyncCallback ToAsyncCallback(\r\n        this Action<IAsyncResult> action)\r\n    {\r\n        return new AsyncCallback(action.Invoke);\r\n    }\r\n\r\n    public static Action<IAsyncResult> ToAction(\r\n        this AsyncCallback @delegate)\r\n    {\r\n        return new Action<IAsyncResult>(@delegate.Invoke);\r\n    }\r\n\r\n    public static Comparison<T> ToComparison<T>(\r\n        this Func<T, T, int> function)\r\n    {\r\n        return new Comparison<T>(function.Invoke);\r\n    }\r\n\r\n    public static Func<T, T, int> ToFunc<T>(\r\n        this Comparison<T> @delegate)\r\n    {\r\n        return new Func<T, T, int>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ConsoleCancelEventHandler ToConsoleCancelEventHandler(\r\n        this Action<object, ConsoleCancelEventArgs> action)\r\n    {\r\n        return new ConsoleCancelEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, ConsoleCancelEventArgs> ToAction(\r\n        this ConsoleCancelEventHandler @delegate)\r\n    {\r\n        return new Action<object, ConsoleCancelEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static Converter<TInput, TOutput> ToConverter<TInput, TOutput>(\r\n        this Func<TInput, TOutput> func)\r\n    {\r\n        return new Converter<TInput, TOutput>(func.Invoke);\r\n    }\r\n\r\n    public static Func<TInput, TOutput> ToFunc<TInput, TOutput>(\r\n        this Converter<TInput, TOutput> @delegate)\r\n    {\r\n        return new Func<TInput, TOutput>(@delegate.Invoke);\r\n    }\r\n\r\n    public static CrossAppDomainDelegate ToCrossAppDomainDelegate(\r\n        this Action action)\r\n    {\r\n        return new CrossAppDomainDelegate(action.Invoke);\r\n    }\r\n\r\n    public static Action ToAction(\r\n        this CrossAppDomainDelegate @delegate)\r\n    {\r\n        return new Action(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler ToEventHandler(\r\n        this Action<object, EventArgs> action)\r\n    {\r\n        return new EventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, EventArgs> ToAction(\r\n        this EventHandler @delegate)\r\n    {\r\n        return new Action<object, EventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<T> ToEventHandler<T>(\r\n        this Action<object, T> action)\r\n        where T : EventArgs\r\n    {\r\n        return new EventHandler<T>(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, T> ToAction<T>(\r\n        this EventHandler<T> @delegate)\r\n        where T : EventArgs\r\n    {\r\n        return new Action<object, T>(@delegate.Invoke);\r\n    }\r\n\r\n    public static Predicate<T> ToPredicate<T>(\r\n        this Func<T, bool> func)\r\n    {\r\n        return new Predicate<T>(func.Invoke);\r\n    }\r\n\r\n    public static Func<T, bool> ToFunc<T>(\r\n        this Predicate<T> @delegate)\r\n    {\r\n        return new Func<T, bool>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ResolveEventHandler ToResolveEventHandler(\r\n        this Func<object, ResolveEventArgs, Assembly> func)\r\n    {\r\n        return new ResolveEventHandler(func.Invoke);\r\n    }\r\n\r\n    public static Func<object, ResolveEventArgs, Assembly> ToFunc(\r\n        this ResolveEventHandler @delegate)\r\n    {\r\n        return new Func<object, ResolveEventArgs, Assembly>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UnhandledExceptionEventHandler ToUnhandledExceptionEventHandler(\r\n        this Action<object, UnhandledExceptionEventArgs> action)\r\n    {\r\n        return new UnhandledExceptionEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, UnhandledExceptionEventArgs> ToAction(\r\n        this UnhandledExceptionEventHandler @delegate)\r\n    {\r\n        return new Action<object, UnhandledExceptionEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static NotifyCollectionChangedEventHandler ToNotifyCollectionChangedEventHandler(\r\n        this Action<object, NotifyCollectionChangedEventArgs> action)\r\n    {\r\n        return new NotifyCollectionChangedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, NotifyCollectionChangedEventArgs> ToAction(\r\n        this NotifyCollectionChangedEventHandler @delegate)\r\n    {\r\n        return new Action<object, NotifyCollectionChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static AddingNewEventHandler ToAddingNewEventHandler(\r\n        this Action<object, AddingNewEventArgs> action)\r\n    {\r\n        return new AddingNewEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, AddingNewEventArgs> ToAction(\r\n        this AddingNewEventHandler @delegate)\r\n    {\r\n        return new Action<object, AddingNewEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static AsyncCompletedEventHandler ToAsyncCompletedEventHandler(\r\n        this Action<object, AsyncCompletedEventArgs> action)\r\n    {\r\n        return new AsyncCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, AsyncCompletedEventArgs> ToAction(\r\n        this AsyncCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, AsyncCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static CancelEventHandler ToCancelEventHandler(\r\n        this Action<object, CancelEventArgs> action)\r\n    {\r\n        return new CancelEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, CancelEventArgs> ToAction(\r\n        this CancelEventHandler @delegate)\r\n    {\r\n        return new Action<object, CancelEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static CollectionChangeEventHandler ToCollectionChangeEventHandler(\r\n        this Action<object, CollectionChangeEventArgs> action)\r\n    {\r\n        return new CollectionChangeEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, CollectionChangeEventArgs> ToAction(\r\n        this CollectionChangeEventHandler @delegate)\r\n    {\r\n        return new Action<object, CollectionChangeEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DoWorkEventHandler ToDoWorkEventHandler(\r\n        this Action<object, DoWorkEventArgs> action)\r\n    {\r\n        return new DoWorkEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, DoWorkEventArgs> ToAction(\r\n        this DoWorkEventHandler @delegate)\r\n    {\r\n        return new Action<object, DoWorkEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static HandledEventHandler ToHandledEventHandler(\r\n        this Action<object, HandledEventArgs> action)\r\n    {\r\n        return new HandledEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, HandledEventArgs> ToAction(\r\n        this HandledEventHandler @delegate)\r\n    {\r\n        return new Action<object, HandledEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ListChangedEventHandler ToListChangedEventHandler(\r\n        this Action<object, ListChangedEventArgs> action)\r\n    {\r\n        return new ListChangedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, ListChangedEventArgs> ToAction(\r\n        this ListChangedEventHandler @delegate)\r\n    {\r\n        return new Action<object, ListChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ProgressChangedEventHandler ToProgressChangedEventHandler(\r\n        this Action<object, ProgressChangedEventArgs> action)\r\n    {\r\n        return new ProgressChangedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, ProgressChangedEventArgs> ToAction(\r\n        this ProgressChangedEventHandler @delegate)\r\n    {\r\n        return new Action<object, ProgressChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static PropertyChangedEventHandler ToPropertyChangedEventHandler(\r\n        this Action<object, PropertyChangedEventArgs> action)\r\n    {\r\n        return new PropertyChangedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, PropertyChangedEventArgs> ToAction(\r\n        this PropertyChangedEventHandler @delegate)\r\n    {\r\n        return new Action<object, PropertyChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static PropertyChangingEventHandler ToPropertyChangingEventHandler(\r\n        this Action<object, PropertyChangingEventArgs> action)\r\n    {\r\n        return new PropertyChangingEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, PropertyChangingEventArgs> ToAction(\r\n        this PropertyChangingEventHandler @delegate)\r\n    {\r\n        return new Action<object, PropertyChangingEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static RefreshEventHandler ToRefreshEventHandler(\r\n        this Action<RefreshEventArgs> action)\r\n    {\r\n        return new RefreshEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<RefreshEventArgs> ToAction(\r\n        this RefreshEventHandler @delegate)\r\n    {\r\n        return new Action<RefreshEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static RunWorkerCompletedEventHandler ToRunWorkerCompletedEventHandler(\r\n        this Action<object, RunWorkerCompletedEventArgs> action)\r\n    {\r\n        return new RunWorkerCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, RunWorkerCompletedEventArgs> ToAction(\r\n        this RunWorkerCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, RunWorkerCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ActiveDesignerEventHandler ToActiveDesignerEventHandler(\r\n        this Action<object, ActiveDesignerEventArgs> action)\r\n    {\r\n        return new ActiveDesignerEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, ActiveDesignerEventArgs> ToAction(\r\n        this ActiveDesignerEventHandler @delegate)\r\n    {\r\n        return new Action<object, ActiveDesignerEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ComponentChangedEventHandler ToComponentChangedEventHandler(\r\n        this Action<object, ComponentChangedEventArgs> action)\r\n    {\r\n        return new ComponentChangedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, ComponentChangedEventArgs> ToAction(\r\n        this ComponentChangedEventHandler @delegate)\r\n    {\r\n        return new Action<object, ComponentChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ComponentChangingEventHandler ToComponentChangingEventHandler(\r\n        this Action<object, ComponentChangingEventArgs> action)\r\n    {\r\n        return new ComponentChangingEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static ComponentEventHandler ToComponentEventHandler(\r\n        this Action<object, ComponentEventArgs> action)\r\n    {\r\n        return new ComponentEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, ComponentEventArgs> ToAction(\r\n        this ComponentEventHandler @delegate)\r\n    {\r\n        return new Action<object, ComponentEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ComponentRenameEventHandler ToComponentRenameEventHandler(\r\n        this Action<object, ComponentRenameEventArgs> action)\r\n    {\r\n        return new ComponentRenameEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, ComponentRenameEventArgs> ToAction(\r\n        this ComponentRenameEventHandler @delegate)\r\n    {\r\n        return new Action<object, ComponentRenameEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DesignerEventHandler ToDesignerEventHandler(\r\n        this Action<object, DesignerEventArgs> action)\r\n    {\r\n        return new DesignerEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static DesignerTransactionCloseEventHandler ToDesignerTransactionCloseEventHandler(\r\n        this Action<object, DesignerTransactionCloseEventArgs> action)\r\n    {\r\n        return new DesignerTransactionCloseEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, DesignerTransactionCloseEventArgs> ToAction(\r\n        this DesignerTransactionCloseEventHandler @delegate)\r\n    {\r\n        return new Action<object, DesignerTransactionCloseEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ServiceCreatorCallback ToServiceCreatorCallback(\r\n        this Func<IServiceContainer, Type, object> func)\r\n    {\r\n        return new ServiceCreatorCallback(func.Invoke);\r\n    }\r\n\r\n    public static Func<IServiceContainer, Type, object> ToFunc(\r\n        this ServiceCreatorCallback @delegate)\r\n    {\r\n        return new Func<IServiceContainer, Type, object>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ResolveNameEventHandler ToResolveNameEventHandler(\r\n        this Action<object, ResolveNameEventArgs> action)\r\n    {\r\n        return new ResolveNameEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, ResolveNameEventArgs> ToAction(\r\n        this ResolveNameEventHandler @delegate)\r\n    {\r\n        return new Action<object, ResolveNameEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SettingChangingEventHandler ToSettingChangingEventHandler(\r\n        this Action<object, SettingChangingEventArgs> action)\r\n    {\r\n        return new SettingChangingEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, SettingChangingEventArgs> ToAction(\r\n        this SettingChangingEventHandler @delegate)\r\n    {\r\n        return new Action<object, SettingChangingEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SettingsLoadedEventHandler ToSettingsLoadedEventHandler(\r\n        this Action<object, SettingsLoadedEventArgs> action)\r\n    {\r\n        return new SettingsLoadedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, SettingsLoadedEventArgs> ToAction(\r\n        this SettingsLoadedEventHandler @delegate)\r\n    {\r\n        return new Action<object, SettingsLoadedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SettingsSavingEventHandler ToSettingsSavingEventHandler(\r\n        this Action<object, CancelEventArgs> action)\r\n    {\r\n        return new SettingsSavingEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, CancelEventArgs> ToAction(\r\n        this SettingsSavingEventHandler @delegate)\r\n    {\r\n        return new Action<object, CancelEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DataReceivedEventHandler ToDataReceivedEventHandler(\r\n        this Action<object, DataReceivedEventArgs> action)\r\n    {\r\n        return new DataReceivedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, DataReceivedEventArgs> ToAction(\r\n        this DataReceivedEventHandler @delegate)\r\n    {\r\n        return new Action<object, DataReceivedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static EntryWrittenEventHandler ToEntryWrittenEventHandler(\r\n        this Action<object, EntryWrittenEventArgs> action)\r\n    {\r\n        return new EntryWrittenEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static ErrorEventHandler ToErrorEventHandler(\r\n        this Action<object, ErrorEventArgs> action)\r\n    {\r\n        return new ErrorEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, ErrorEventArgs> ToAction(\r\n        this ErrorEventHandler @delegate)\r\n    {\r\n        return new Action<object, ErrorEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static FileSystemEventHandler ToFileSystemEventHandler(\r\n        this Action<object, FileSystemEventArgs> action)\r\n    {\r\n        return new FileSystemEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, FileSystemEventArgs> ToAction(\r\n        this FileSystemEventHandler @delegate)\r\n    {\r\n        return new Action<object, FileSystemEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static RenamedEventHandler ToRenamedEventHandler(\r\n        this Action<object, RenamedEventArgs> action)\r\n    {\r\n        return new RenamedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, RenamedEventArgs> ToAction(\r\n        this RenamedEventHandler @delegate)\r\n    {\r\n        return new Action<object, RenamedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static PipeStreamImpersonationWorker ToPipeStreamImpersonationWorker(\r\n        this Action action)\r\n    {\r\n        return new PipeStreamImpersonationWorker(action.Invoke);\r\n    }\r\n\r\n    public static Action ToAction(\r\n        this PipeStreamImpersonationWorker @delegate)\r\n    {\r\n        return new Action(@delegate.Invoke);\r\n    }\r\n\r\n    public static SerialDataReceivedEventHandler ToSerialDataReceivedEventHandler(\r\n        this Action<object, SerialDataReceivedEventArgs> action)\r\n    {\r\n        return new SerialDataReceivedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, SerialDataReceivedEventArgs> ToAction(\r\n        this SerialDataReceivedEventHandler @delegate)\r\n    {\r\n        return new Action<object, SerialDataReceivedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SerialErrorReceivedEventHandler ToSerialErrorReceivedEventHandler(\r\n        this Action<object, SerialErrorReceivedEventArgs> action)\r\n    {\r\n        return new SerialErrorReceivedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, SerialErrorReceivedEventArgs> ToAction(\r\n        this SerialErrorReceivedEventHandler @delegate)\r\n    {\r\n        return new Action<object, SerialErrorReceivedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SerialPinChangedEventHandler ToSerialPinChangedEventHandler(\r\n        this Action<object, SerialPinChangedEventArgs> action)\r\n    {\r\n        return new SerialPinChangedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, SerialPinChangedEventArgs> ToAction(\r\n        this SerialPinChangedEventHandler @delegate)\r\n    {\r\n        return new Action<object, SerialPinChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static AuthenticationSchemeSelector ToAuthenticationSchemeSelector(\r\n        this Func<HttpListenerRequest, AuthenticationSchemes> func)\r\n    {\r\n        return new AuthenticationSchemeSelector(func.Invoke);\r\n    }\r\n\r\n    public static Func<HttpListenerRequest, AuthenticationSchemes> ToFunc(\r\n        this AuthenticationSchemeSelector @delegate)\r\n    {\r\n        return new Func<HttpListenerRequest, AuthenticationSchemes>(@delegate.Invoke);\r\n    }\r\n\r\n    public static BindIPEndPoint ToBindIPEndPoint(\r\n        this Func<ServicePoint, IPEndPoint, int, IPEndPoint> func)\r\n    {\r\n        return new BindIPEndPoint(func.Invoke);\r\n    }\r\n\r\n    public static Func<ServicePoint, IPEndPoint, int, IPEndPoint> ToFunc(\r\n        this BindIPEndPoint @delegate)\r\n    {\r\n        return new Func<ServicePoint, IPEndPoint, int, IPEndPoint>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DownloadDataCompletedEventHandler ToDownloadDataCompletedEventHandler(\r\n        this Action<object, DownloadDataCompletedEventArgs> action)\r\n    {\r\n        return new DownloadDataCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, DownloadDataCompletedEventArgs> ToAction(\r\n        this DownloadDataCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, DownloadDataCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DownloadProgressChangedEventHandler ToDownloadProgressChangedEventHandler(\r\n        this Action<object, DownloadProgressChangedEventArgs> action)\r\n    {\r\n        return new DownloadProgressChangedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, DownloadProgressChangedEventArgs> ToAction(\r\n        this DownloadProgressChangedEventHandler @delegate)\r\n    {\r\n        return new Action<object, DownloadProgressChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DownloadStringCompletedEventHandler ToDownloadStringCompletedEventHandler(\r\n        this Action<object, DownloadStringCompletedEventArgs> action)\r\n    {\r\n        return new DownloadStringCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, DownloadStringCompletedEventArgs> ToAction(\r\n        this DownloadStringCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, DownloadStringCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static HttpContinueDelegate ToHttpContinueDelegate(\r\n        this Action<int, WebHeaderCollection> action)\r\n    {\r\n        return new HttpContinueDelegate(action.Invoke);\r\n    }\r\n\r\n    public static Action<int, WebHeaderCollection> ToAction(\r\n        this HttpContinueDelegate @delegate)\r\n    {\r\n        return new Action<int, WebHeaderCollection>(@delegate.Invoke);\r\n    }\r\n\r\n    public static OpenReadCompletedEventHandler ToOpenReadCompletedEventHandler(\r\n        this Action<object, OpenReadCompletedEventArgs> action)\r\n    {\r\n        return new OpenReadCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, OpenReadCompletedEventArgs> ToAction(\r\n        this OpenReadCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, OpenReadCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static OpenWriteCompletedEventHandler ToOpenWriteCompletedEventHandler(\r\n        this Action<object, OpenWriteCompletedEventArgs> action)\r\n    {\r\n        return new OpenWriteCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, OpenWriteCompletedEventArgs> ToAction(\r\n        this OpenWriteCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, OpenWriteCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UploadDataCompletedEventHandler ToUploadDataCompletedEventHandler(\r\n        this Action<object, UploadDataCompletedEventArgs> action)\r\n    {\r\n        return new UploadDataCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, UploadDataCompletedEventArgs> ToAction(\r\n        this UploadDataCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, UploadDataCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UploadFileCompletedEventHandler ToUploadFileCompletedEventHandler(\r\n        this Action<object, UploadFileCompletedEventArgs> action)\r\n    {\r\n        return new UploadFileCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, UploadFileCompletedEventArgs> ToAction(\r\n        this UploadFileCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, UploadFileCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UploadProgressChangedEventHandler ToUploadProgressChangedEventHandler(\r\n        this Action<object, UploadProgressChangedEventArgs> action)\r\n    {\r\n        return new UploadProgressChangedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, UploadProgressChangedEventArgs> ToAction(\r\n        this UploadProgressChangedEventHandler @delegate)\r\n    {\r\n        return new Action<object, UploadProgressChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UploadStringCompletedEventHandler ToUploadStringCompletedEventHandler(\r\n        this Action<object, UploadStringCompletedEventArgs> action)\r\n    {\r\n        return new UploadStringCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, UploadStringCompletedEventArgs> ToAction(\r\n        this UploadStringCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, UploadStringCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UploadValuesCompletedEventHandler ToUploadValuesCompletedEventHandler(\r\n        this Action<object, UploadValuesCompletedEventArgs> action)\r\n    {\r\n        return new UploadValuesCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, UploadValuesCompletedEventArgs> ToAction(\r\n        this UploadValuesCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, UploadValuesCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SendCompletedEventHandler ToSendCompletedEventHandler(\r\n        this Action<object, AsyncCompletedEventArgs> action)\r\n    {\r\n        return new SendCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, AsyncCompletedEventArgs> ToAction(\r\n        this SendCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, AsyncCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static NetworkAddressChangedEventHandler ToNetworkAddressChangedEventHandler(\r\n        this Action<object, EventArgs> action)\r\n    {\r\n        return new NetworkAddressChangedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, EventArgs> ToAction(\r\n        this NetworkAddressChangedEventHandler @delegate)\r\n    {\r\n        return new Action<object, EventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static NetworkAvailabilityChangedEventHandler ToNetworkAvailabilityChangedEventHandler(\r\n        this Action<object, NetworkAvailabilityEventArgs> action)\r\n    {\r\n        return new NetworkAvailabilityChangedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, NetworkAvailabilityEventArgs> ToAction(\r\n        this NetworkAvailabilityChangedEventHandler @delegate)\r\n    {\r\n        return new Action<object, NetworkAvailabilityEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static PingCompletedEventHandler ToPingCompletedEventHandler(\r\n        this Action<object, PingCompletedEventArgs> action)\r\n    {\r\n        return new PingCompletedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, PingCompletedEventArgs> ToAction(\r\n        this PingCompletedEventHandler @delegate)\r\n    {\r\n        return new Action<object, PingCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static LocalCertificateSelectionCallback ToLocalCertificateSelectionCallback(\r\n        this Func<object, string, X509CertificateCollection, X509Certificate, string[], X509Certificate> func)\r\n    {\r\n        return new LocalCertificateSelectionCallback(func.Invoke);\r\n    }\r\n\r\n    public static Func<object, string, X509CertificateCollection, X509Certificate, string[], X509Certificate> ToFunc(\r\n        this LocalCertificateSelectionCallback @delegate)\r\n    {\r\n        return new Func<object, string, X509CertificateCollection, X509Certificate, string[], X509Certificate>(@delegate.Invoke);\r\n    }\r\n\r\n    public static RemoteCertificateValidationCallback ToRemoteCertificateValidationCallback(\r\n        this Func<object, X509Certificate, X509Chain, SslPolicyErrors, bool> func)\r\n    {\r\n        return new RemoteCertificateValidationCallback(func.Invoke);\r\n    }\r\n\r\n    public static Func<object, X509Certificate, X509Chain, SslPolicyErrors, bool> ToFunc(\r\n        this RemoteCertificateValidationCallback @delegate)\r\n    {\r\n        return new Func<object, X509Certificate, X509Chain, SslPolicyErrors, bool>(@delegate.Invoke);\r\n    }\r\n\r\n    public static MemberFilter ToMemberFilter(\r\n        this Func<MemberInfo, object, bool> func)\r\n    {\r\n        return new MemberFilter(func.Invoke);\r\n    }\r\n\r\n    public static Func<MemberInfo, object, bool> ToFunc(\r\n        this MemberFilter @delegate)\r\n    {\r\n        return new Func<MemberInfo, object, bool>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ModuleResolveEventHandler ToModuleResolveEventHandler(\r\n        this Func<object, ResolveEventArgs, Module> func)\r\n    {\r\n        return new ModuleResolveEventHandler(func.Invoke);\r\n    }\r\n\r\n    public static Func<object, ResolveEventArgs, Module> ToFunc(\r\n        this ModuleResolveEventHandler @delegate)\r\n    {\r\n        return new Func<object, ResolveEventArgs, Module>(@delegate.Invoke);\r\n    }\r\n\r\n    public static TypeFilter ToTypeFilter(\r\n        this Func<Type, object, bool> func)\r\n    {\r\n        return new TypeFilter(func.Invoke);\r\n    }\r\n\r\n    public static Func<Type, object, bool> ToFunc(\r\n        this TypeFilter @delegate)\r\n    {\r\n        return new Func<Type, object, bool>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ObjectCreationDelegate ToObjectCreationDelegate(\r\n        this Func<IntPtr, IntPtr> func)\r\n    {\r\n        return new ObjectCreationDelegate(func.Invoke);\r\n    }\r\n\r\n    public static Func<IntPtr, IntPtr> ToFunc(\r\n        this ObjectCreationDelegate @delegate)\r\n    {\r\n        return new Func<IntPtr, IntPtr>(@delegate.Invoke);\r\n    }\r\n\r\n    public static CrossContextDelegate ToCrossContextDelegate(\r\n        this Action action)\r\n    {\r\n        return new CrossContextDelegate(action.Invoke);\r\n    }\r\n\r\n    public static Action ToAction(\r\n        this CrossContextDelegate @delegate)\r\n    {\r\n        return new Action(@delegate.Invoke);\r\n    }\r\n\r\n    public static HeaderHandler ToHeaderHandler(\r\n        this Func<Header[], object> func)\r\n    {\r\n        return new HeaderHandler(func.Invoke);\r\n    }\r\n\r\n    public static Func<Header[], object> ToFunc(\r\n        this HeaderHandler @delegate)\r\n    {\r\n        return new Func<Header[], object>(@delegate.Invoke);\r\n    }\r\n\r\n    public static MessageSurrogateFilter ToMessageSurrogateFilter(\r\n        this Func<string, object, bool> func)\r\n    {\r\n        return new MessageSurrogateFilter(func.Invoke);\r\n    }\r\n\r\n    public static Func<string, object, bool> ToFunc(\r\n        this MessageSurrogateFilter @delegate)\r\n    {\r\n        return new Func<string, object, bool>(@delegate.Invoke);\r\n    }\r\n\r\n    public static MatchEvaluator ToMatchEvaluator(\r\n        this Func<Match, string> func)\r\n    {\r\n        return new MatchEvaluator(func.Invoke);\r\n    }\r\n\r\n    public static Func<Match, string> ToFunc(\r\n        this MatchEvaluator @delegate)\r\n    {\r\n        return new Func<Match, string>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ContextCallback ToContextCallback(\r\n        this Action<object> action)\r\n    {\r\n        return new ContextCallback(action.Invoke);\r\n    }\r\n\r\n    public static Action<object> ToAction(\r\n        this ContextCallback @delegate)\r\n    {\r\n        return new Action<object>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ParameterizedThreadStart ToParameterizedThreadStart(\r\n        this Action<object> action)\r\n    {\r\n        return new ParameterizedThreadStart(action.Invoke);\r\n    }\r\n\r\n    public static Action<object> ToAction(\r\n        this ParameterizedThreadStart @delegate)\r\n    {\r\n        return new Action<object>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SendOrPostCallback ToSendOrPostCallback(\r\n        this Action<object> action)\r\n    {\r\n        return new SendOrPostCallback(action.Invoke);\r\n    }\r\n\r\n    public static Action<object> ToAction(\r\n        this SendOrPostCallback @delegate)\r\n    {\r\n        return new Action<object>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ThreadExceptionEventHandler ToThreadExceptionEventHandler(\r\n        this Action<object, ThreadExceptionEventArgs> action)\r\n    {\r\n        return new ThreadExceptionEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, ThreadExceptionEventArgs> ToAction(\r\n        this ThreadExceptionEventHandler @delegate)\r\n    {\r\n        return new Action<object, ThreadExceptionEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ThreadStart ToThreadStart(\r\n        this Action action)\r\n    {\r\n        return new ThreadStart(action.Invoke);\r\n    }\r\n\r\n    public static Action ToAction(\r\n        this ThreadStart @delegate)\r\n    {\r\n        return new Action(@delegate.Invoke);\r\n    }\r\n\r\n    public static TimerCallback ToTimerCallback(\r\n        this Action<object> action)\r\n    {\r\n        return new TimerCallback(action.Invoke);\r\n    }\r\n\r\n    public static Action<object> ToAction(\r\n        this TimerCallback @delegate)\r\n    {\r\n        return new Action<object>(@delegate.Invoke);\r\n    }\r\n\r\n    public static WaitCallback ToWaitCallback(\r\n        this Action<object> action)\r\n    {\r\n        return new WaitCallback(action.Invoke);\r\n    }\r\n\r\n    public static Action<object> ToAction(\r\n        this WaitCallback @delegate)\r\n    {\r\n        return new Action<object>(@delegate.Invoke);\r\n    }\r\n\r\n    public static WaitOrTimerCallback ToWaitOrTimerCallback(\r\n        this Action<object, bool> action)\r\n    {\r\n        return new WaitOrTimerCallback(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, bool> ToAction(\r\n        this WaitOrTimerCallback @delegate)\r\n    {\r\n        return new Action<object, bool>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ElapsedEventHandler ToElapsedEventHandler(\r\n        this Action<object, ElapsedEventArgs> action)\r\n    {\r\n        return new ElapsedEventHandler(action.Invoke);\r\n    }\r\n\r\n    public static Action<object, ElapsedEventArgs> ToAction(\r\n        this ElapsedEventHandler @delegate)\r\n    {\r\n        return new Action<object, ElapsedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static AssemblyLoadEventHandler ToAssemblyEventHandler(\r\n        this EventHandler<AssemblyLoadEventArgs> @delegate)\r\n    {\r\n        return new AssemblyLoadEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<AssemblyLoadEventArgs> ToEventHandler(\r\n        this AssemblyLoadEventHandler @delegate)\r\n    {\r\n        return new EventHandler<AssemblyLoadEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ConsoleCancelEventHandler ToConsoleCancelEventHandler(\r\n        this EventHandler<ConsoleCancelEventArgs> @delegate)\r\n    {\r\n        return new ConsoleCancelEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ConsoleCancelEventArgs> ToEventHandler(\r\n        this ConsoleCancelEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ConsoleCancelEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler ToEventHandler(\r\n        this EventHandler<EventArgs> @delegate)\r\n    {\r\n        return new EventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<EventArgs> ToEventHandler(\r\n        this EventHandler @delegate)\r\n    {\r\n        return new EventHandler<EventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UnhandledExceptionEventHandler ToUnhandledExceptionEventHandler(\r\n        this EventHandler<UnhandledExceptionEventArgs> @delegate)\r\n    {\r\n        return new UnhandledExceptionEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<UnhandledExceptionEventArgs> ToEventHandler(\r\n        this UnhandledExceptionEventHandler @delegate)\r\n    {\r\n        return new EventHandler<UnhandledExceptionEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static NotifyCollectionChangedEventHandler ToNotifyCollectionChangedEventHandler(\r\n        this EventHandler<NotifyCollectionChangedEventArgs> @delegate)\r\n    {\r\n        return new NotifyCollectionChangedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<NotifyCollectionChangedEventArgs> ToEventHandler(\r\n        this NotifyCollectionChangedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<NotifyCollectionChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static AddingNewEventHandler ToAddingNewEventHandler(\r\n        this EventHandler<AddingNewEventArgs> @delegate)\r\n    {\r\n        return new AddingNewEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<AddingNewEventArgs> ToEventHandler(\r\n        this AddingNewEventHandler @delegate)\r\n    {\r\n        return new EventHandler<AddingNewEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static AsyncCompletedEventHandler ToAsyncCompletedEventHandler(\r\n        this EventHandler<AsyncCompletedEventArgs> @delegate)\r\n    {\r\n        return new AsyncCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<AsyncCompletedEventArgs> ToEventHandler(\r\n        this AsyncCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<AsyncCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static CancelEventHandler ToCancelEventHandler(\r\n        this EventHandler<CancelEventArgs> @delegate)\r\n    {\r\n        return new CancelEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<CancelEventArgs> ToEventHandler(\r\n        this CancelEventHandler @delegate)\r\n    {\r\n        return new EventHandler<CancelEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static CollectionChangeEventHandler ToCollectionChangeEventHandler(\r\n        this EventHandler<CollectionChangeEventArgs> @delegate)\r\n    {\r\n        return new CollectionChangeEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<CollectionChangeEventArgs> ToEventHandler(\r\n        this CollectionChangeEventHandler @delegate)\r\n    {\r\n        return new EventHandler<CollectionChangeEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DoWorkEventHandler ToDoWorkEventHandler(\r\n        this EventHandler<DoWorkEventArgs> @delegate)\r\n    {\r\n        return new DoWorkEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<DoWorkEventArgs> ToEventHandler(\r\n        this DoWorkEventHandler @delegate)\r\n    {\r\n        return new EventHandler<DoWorkEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static HandledEventHandler ToHandledEventHandler(\r\n        this EventHandler<HandledEventArgs> @delegate)\r\n    {\r\n        return new HandledEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<HandledEventArgs> ToEventHandler(\r\n        this HandledEventHandler @delegate)\r\n    {\r\n        return new EventHandler<HandledEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ListChangedEventHandler ToListChangedEventHandler(\r\n        this EventHandler<ListChangedEventArgs> @delegate)\r\n    {\r\n        return new ListChangedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ListChangedEventArgs> ToEventHandler(\r\n        this ListChangedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ListChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ProgressChangedEventHandler ToProgressChangedEventHandler(\r\n        this EventHandler<ProgressChangedEventArgs> @delegate)\r\n    {\r\n        return new ProgressChangedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ProgressChangedEventArgs> ToEventHandler(\r\n        this ProgressChangedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ProgressChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static PropertyChangedEventHandler ToPropertyChangedEventHandler(\r\n        this EventHandler<PropertyChangedEventArgs> @delegate)\r\n    {\r\n        return new PropertyChangedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<PropertyChangedEventArgs> ToEventHandler(\r\n        this PropertyChangedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<PropertyChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static PropertyChangingEventHandler ToPropertyChangingEventHandler(\r\n        this EventHandler<PropertyChangingEventArgs> @delegate)\r\n    {\r\n        return new PropertyChangingEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<PropertyChangingEventArgs> ToEventHandler(\r\n        this PropertyChangingEventHandler @delegate)\r\n    {\r\n        return new EventHandler<PropertyChangingEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static RunWorkerCompletedEventHandler ToRunWorkerCompletedEventHandler(\r\n        this EventHandler<RunWorkerCompletedEventArgs> @delegate)\r\n    {\r\n        return new RunWorkerCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<RunWorkerCompletedEventArgs> ToEventHandler(\r\n        this RunWorkerCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<RunWorkerCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ActiveDesignerEventHandler ToActiveDesignerEventHandler(\r\n        this EventHandler<ActiveDesignerEventArgs> @delegate)\r\n    {\r\n        return new ActiveDesignerEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ActiveDesignerEventArgs> ToEventHandler(\r\n        this ActiveDesignerEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ActiveDesignerEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ComponentChangedEventHandler ToComponentChangedEventHandler(\r\n        this EventHandler<ComponentChangedEventArgs> @delegate)\r\n    {\r\n        return new ComponentChangedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ComponentChangedEventArgs> ToEventHandler(\r\n        this ComponentChangedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ComponentChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ComponentChangingEventHandler ToComponentChangingEventHandler(\r\n        this EventHandler<ComponentChangingEventArgs> @delegate)\r\n    {\r\n        return new ComponentChangingEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ComponentChangingEventArgs> ToEventHandler(\r\n        this ComponentChangingEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ComponentChangingEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ComponentEventHandler ToComponentEventHandler(\r\n        this EventHandler<ComponentEventArgs> @delegate)\r\n    {\r\n        return new ComponentEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ComponentEventArgs> ToEventHandler(\r\n        this ComponentEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ComponentEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ComponentRenameEventHandler ToComponentRenameEventHandler(\r\n        this EventHandler<ComponentRenameEventArgs> @delegate)\r\n    {\r\n        return new ComponentRenameEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ComponentRenameEventArgs> ToEventHandler(\r\n        this ComponentRenameEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ComponentRenameEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DesignerEventHandler ToDesignerEventHandler(\r\n        this EventHandler<DesignerEventArgs> @delegate)\r\n    {\r\n        return new DesignerEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<DesignerEventArgs> ToEventHandler(\r\n        this DesignerEventHandler @delegate)\r\n    {\r\n        return new EventHandler<DesignerEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DesignerTransactionCloseEventHandler ToDesignerTransactionCloseEventHandler(\r\n        this EventHandler<DesignerTransactionCloseEventArgs> @delegate)\r\n    {\r\n        return new DesignerTransactionCloseEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<DesignerTransactionCloseEventArgs> ToEventHandler(\r\n        this DesignerTransactionCloseEventHandler @delegate)\r\n    {\r\n        return new EventHandler<DesignerTransactionCloseEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ResolveNameEventHandler ToResolveNameEventHandler(\r\n        this EventHandler<ResolveNameEventArgs> @delegate)\r\n    {\r\n        return new ResolveNameEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ResolveNameEventArgs> ToEventHandler(\r\n        this ResolveNameEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ResolveNameEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SettingChangingEventHandler ToSettingChangingEventHandler(\r\n        this EventHandler<SettingChangingEventArgs> @delegate)\r\n    {\r\n        return new SettingChangingEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<SettingChangingEventArgs> ToEventHandler(\r\n        this SettingChangingEventHandler @delegate)\r\n    {\r\n        return new EventHandler<SettingChangingEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SettingsLoadedEventHandler ToSettingsLoadedEventHandler(\r\n        this EventHandler<SettingsLoadedEventArgs> @delegate)\r\n    {\r\n        return new SettingsLoadedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<SettingsLoadedEventArgs> ToEventHandler(\r\n        this SettingsLoadedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<SettingsLoadedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SettingsSavingEventHandler ToSettingsSavingEventHandler(\r\n        this EventHandler<CancelEventArgs> @delegate)\r\n    {\r\n        return new SettingsSavingEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<CancelEventArgs> ToEventHandler(\r\n        this SettingsSavingEventHandler @delegate)\r\n    {\r\n        return new EventHandler<CancelEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SettingsSavingEventHandler ToSettingsSavingEventHandler(\r\n        this CancelEventHandler @delegate)\r\n    {\r\n        return new SettingsSavingEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static CancelEventHandler ToCancelEventHandler(\r\n        this SettingsSavingEventHandler @delegate)\r\n    {\r\n        return new CancelEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static DataReceivedEventHandler ToDataReceivedEventHandler(\r\n        this EventHandler<DataReceivedEventArgs> @delegate)\r\n    {\r\n        return new DataReceivedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<DataReceivedEventArgs> ToEventHandler(\r\n        this DataReceivedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<DataReceivedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static EntryWrittenEventHandler ToEntryWrittenEventHandler(\r\n        this EventHandler<EntryWrittenEventArgs> @delegate)\r\n    {\r\n        return new EntryWrittenEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<EntryWrittenEventArgs> ToEventHandler(\r\n        this EntryWrittenEventHandler @delegate)\r\n    {\r\n        return new EventHandler<EntryWrittenEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ErrorEventHandler ToErrorEventHandler(\r\n        this EventHandler<ErrorEventArgs> @delegate)\r\n    {\r\n        return new ErrorEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ErrorEventArgs> ToEventHandler(\r\n        this ErrorEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ErrorEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static FileSystemEventHandler ToFileSystemEventHandler(\r\n        this EventHandler<FileSystemEventArgs> @delegate)\r\n    {\r\n        return new FileSystemEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static RenamedEventHandler ToRenamedEventHandler(\r\n        this EventHandler<RenamedEventArgs> @delegate)\r\n    {\r\n        return new RenamedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<RenamedEventArgs> ToEventHandler(\r\n        this RenamedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<RenamedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SerialDataReceivedEventHandler ToSerialDataReceivedEventHandler(\r\n        this EventHandler<SerialDataReceivedEventArgs> @delegate)\r\n    {\r\n        return new SerialDataReceivedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<SerialDataReceivedEventArgs> ToEventHandler(\r\n        this SerialDataReceivedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<SerialDataReceivedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SerialErrorReceivedEventHandler ToSerialErrorReceivedEventHandler(\r\n        this EventHandler<SerialErrorReceivedEventArgs> @delegate)\r\n    {\r\n        return new SerialErrorReceivedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<SerialErrorReceivedEventArgs> ToEventHandler(\r\n        this SerialErrorReceivedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<SerialErrorReceivedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SerialPinChangedEventHandler ToSerialPinChangedEventHandler(\r\n        this EventHandler<SerialPinChangedEventArgs> @delegate)\r\n    {\r\n        return new SerialPinChangedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<SerialPinChangedEventArgs> ToEventHandler(\r\n        this SerialPinChangedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<SerialPinChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DownloadDataCompletedEventHandler ToDownloadDataCompletedEventHandler(\r\n        this EventHandler<DownloadDataCompletedEventArgs> @delegate)\r\n    {\r\n        return new DownloadDataCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<DownloadDataCompletedEventArgs> ToEventHandler(\r\n        this DownloadDataCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<DownloadDataCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DownloadProgressChangedEventHandler ToDownloadProgressChangedEventHandler(\r\n        this EventHandler<DownloadProgressChangedEventArgs> @delegate)\r\n    {\r\n        return new DownloadProgressChangedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<DownloadProgressChangedEventArgs> ToEventHandler(\r\n        this DownloadProgressChangedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<DownloadProgressChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static DownloadStringCompletedEventHandler ToDownloadStringCompletedEventHandler(\r\n        this EventHandler<DownloadStringCompletedEventArgs> @delegate)\r\n    {\r\n        return new DownloadStringCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<DownloadStringCompletedEventArgs> ToEventHandler(\r\n        this DownloadStringCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<DownloadStringCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static OpenReadCompletedEventHandler ToOpenReadCompletedEventHandler(\r\n        this EventHandler<OpenReadCompletedEventArgs> @delegate)\r\n    {\r\n        return new OpenReadCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<OpenReadCompletedEventArgs> ToEventHandler(\r\n        this OpenReadCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<OpenReadCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static OpenWriteCompletedEventHandler ToOpenWriteCompletedEventHandler(\r\n        this EventHandler<OpenWriteCompletedEventArgs> @delegate)\r\n    {\r\n        return new OpenWriteCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<OpenWriteCompletedEventArgs> ToEventHandler(\r\n        this OpenWriteCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<OpenWriteCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UploadDataCompletedEventHandler ToUploadDataCompletedEventHandler(\r\n        this EventHandler<UploadDataCompletedEventArgs> @delegate)\r\n    {\r\n        return new UploadDataCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<UploadDataCompletedEventArgs> ToEventHandler(\r\n        this UploadDataCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<UploadDataCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UploadFileCompletedEventHandler ToUploadFileCompletedEventHandler(\r\n        this EventHandler<UploadFileCompletedEventArgs> @delegate)\r\n    {\r\n        return new UploadFileCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<UploadFileCompletedEventArgs> ToEventHandler(\r\n        this UploadFileCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<UploadFileCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UploadProgressChangedEventHandler ToUploadProgressChangedEventHandler(\r\n        this EventHandler<UploadProgressChangedEventArgs> @delegate)\r\n    {\r\n        return new UploadProgressChangedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<UploadProgressChangedEventArgs> ToEventHandler(\r\n        this UploadProgressChangedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<UploadProgressChangedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UploadStringCompletedEventHandler ToUploadStringCompletedEventHandler(\r\n        this EventHandler<UploadStringCompletedEventArgs> @delegate)\r\n    {\r\n        return new UploadStringCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<UploadStringCompletedEventArgs> ToEventHandler(\r\n        this UploadStringCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<UploadStringCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static UploadValuesCompletedEventHandler ToUploadValuesCompletedEventHandler(\r\n        this EventHandler<UploadValuesCompletedEventArgs> @delegate)\r\n    {\r\n        return new UploadValuesCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<UploadValuesCompletedEventArgs> ToEventHandler(\r\n        this UploadValuesCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<UploadValuesCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SendCompletedEventHandler ToSendCompletedEventHandler(\r\n        this EventHandler<AsyncCompletedEventArgs> @delegate)\r\n    {\r\n        return new SendCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<AsyncCompletedEventArgs> ToEventHandler(\r\n        this SendCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<AsyncCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static SendCompletedEventHandler ToSendCompletedEventHandler(\r\n        this AsyncCompletedEventHandler @delegate)\r\n    {\r\n        return new SendCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static AsyncCompletedEventHandler ToAsyncCompletedEventHandler(\r\n        this SendCompletedEventHandler @delegate)\r\n    {\r\n        return new AsyncCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static NetworkAddressChangedEventHandler ToNetworkAddressChangedEventHandler(\r\n        this EventHandler<EventArgs> @delegate)\r\n    {\r\n        return new NetworkAddressChangedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<EventArgs> ToEventHandler(\r\n        this NetworkAddressChangedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<EventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static NetworkAddressChangedEventHandler ToNetworkAddressChangedEventHandler(\r\n        this EventHandler @delegate)\r\n    {\r\n        return new NetworkAddressChangedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static NetworkAvailabilityChangedEventHandler ToNetworkAvailabilityChangedEventHandler(\r\n        this EventHandler<NetworkAvailabilityEventArgs> @delegate)\r\n    {\r\n        return new NetworkAvailabilityChangedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<NetworkAvailabilityEventArgs> ToEventHandler(\r\n        this NetworkAvailabilityChangedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<NetworkAvailabilityEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static PingCompletedEventHandler ToPingCompletedEventHandler(\r\n        this EventHandler<PingCompletedEventArgs> @delegate)\r\n    {\r\n        return new PingCompletedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<PingCompletedEventArgs> ToEventHandler(\r\n        this PingCompletedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<PingCompletedEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ThreadExceptionEventHandler ToThreadExceptionEventHandler(\r\n        this EventHandler<ThreadExceptionEventArgs> @delegate)\r\n    {\r\n        return new ThreadExceptionEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ThreadExceptionEventArgs> ToEventHandler(\r\n        this ThreadExceptionEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ThreadExceptionEventArgs>(@delegate.Invoke);\r\n    }\r\n\r\n    public static ElapsedEventHandler ToElapsedEventHandler(\r\n        this EventHandler<ElapsedEventArgs> @delegate)\r\n    {\r\n        return new ElapsedEventHandler(@delegate.Invoke);\r\n    }\r\n\r\n    public static EventHandler<ElapsedEventArgs> ToEventHandler(\r\n        this ElapsedEventHandler @delegate)\r\n    {\r\n        return new EventHandler<ElapsedEventArgs>(@delegate.Invoke);\r\n    }\r\n}","static event EventHandler<CancelEventArgs> CustomCancelEvent;\r\nstatic event CancelEventHandler CustomCancelEvent2;\r\n\r\nstatic void Main()\r\n{\r\n    CustomCancelEvent += new CancelEventHandler((s, e) => {\r\n        Console.WriteLine(\"Wrapped cancel event handler invoked.\");\r\n    }).ToEventHandler();\r\n\r\n    CustomCancelEvent(new Object(), new CancelEventArgs(false));\r\n\r\n    CustomCancelEvent2 += new EventHandler<CancelEventArgs>((s, e) =>\r\n    {\r\n        Console.WriteLine(\"Wrapped cancel event type 2 handler invoked.\");\r\n    }).ToCancelEventHandler();\r\n\r\n    CustomCancelEvent2(new Object(), new CancelEventArgs(true));\r\n}"]}