{"Name":"Shorthand Task.Factory.FromAsync (for .NET 4.0)","Description":"This extension method series represent shorthand version of Task.Factory.FromAsync (for .NET 4.0)","Author":"rkttu","SubmittedOn":"2/4/2016 7:47:27 AM","Entries":["public static Task<TResult> ToTask<TResult>(\r\n    this Func<TResult> function,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task<TResult>.Factory.FromAsync(\r\n        function.BeginInvoke(callback, @object),\r\n        function.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task<TResult> ToTask<TArg1, TResult>(\r\n    this Func<TArg1, TResult> function,\r\n    TArg1 arg,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions))\r\n{\r\n    return Task<TResult>.Factory.FromAsync<TArg1>(\r\n        function.BeginInvoke,\r\n        function.EndInvoke,\r\n        arg,\r\n        @object, creationOptions);\r\n}\r\n\r\npublic static Task<TResult> ToTask<TArg1, TArg2, TResult>(\r\n    this Func<TArg1, TArg2, TResult> function,\r\n    TArg1 arg1, TArg2 arg2,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions))\r\n{\r\n    return Task<TResult>.Factory.FromAsync<TArg1, TArg2>(\r\n        function.BeginInvoke,\r\n        function.EndInvoke,\r\n        arg1, arg2,\r\n        @object, creationOptions);\r\n}\r\n\r\npublic static Task<TResult> ToTask<TArg1, TArg2, TArg3, TResult>(\r\n    this Func<TArg1, TArg2, TArg3, TResult> function,\r\n    TArg1 arg1, TArg2 arg2, TArg3 arg3,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions))\r\n{\r\n    return Task<TResult>.Factory.FromAsync<TArg1, TArg2, TArg3>(\r\n        function.BeginInvoke,\r\n        function.EndInvoke,\r\n        arg1, arg2, arg3,\r\n        @object, creationOptions);\r\n}\r\n\r\npublic static Task ToTask(\r\n    this Action action,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T>(\r\n    this Action<T> action,\r\n    T obj,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(obj, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2>(\r\n    this Action<T1, T2> action,\r\n    T1 arg1, T2 arg2,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3>(\r\n    this Action<T1, T2, T3> action,\r\n    T1 arg1, T2 arg2, T3 arg3,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4>(\r\n    this Action<T1, T2, T3, T4> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5>(\r\n    this Action<T1, T2, T3, T4, T5> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5, T6>(\r\n    this Action<T1, T2, T3, T4, T5, T6> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, arg6, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5, T6, T7>(\r\n    this Action<T1, T2, T3, T4, T5, T6, T7> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, arg6, arg7, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5, T6, T7, T8>(\r\n    this Action<T1, T2, T3, T4, T5, T6, T7, T8> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5, T6, T7, T8, T9>(\r\n    this Action<T1, T2, T3, T4, T5, T6, T7, T8, T9> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(\r\n    this Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(\r\n    this Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(\r\n    this Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(\r\n    this Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(\r\n    this Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(\r\n    this Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}\r\n\r\npublic static Task ToTask<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(\r\n    this Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> action,\r\n    T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15, T16 arg16,\r\n    AsyncCallback callback = default(AsyncCallback),\r\n    object @object = default(object),\r\n    TaskCreationOptions creationOptions = default(TaskCreationOptions),\r\n    TaskScheduler scheduler = default(TaskScheduler))\r\n{\r\n    return Task.Factory.FromAsync(\r\n        action.BeginInvoke(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, callback, @object),\r\n        action.EndInvoke, creationOptions,\r\n        (scheduler ?? TaskScheduler.Current) ?? TaskScheduler.Default);\r\n}","((Func<double, double, double>)Math.Pow)\r\n    .ToTask(2d, 2d)\r\n    .ContinueWith(x => ((Action<string, object[]>)Console.WriteLine).ToTask(\"Power value: {0}\", new object[] { x.Result }))\r\n    .Wait();\r\nConsole.WriteLine(\"Program completed.\");\r\nConsole.ReadLine();"]}