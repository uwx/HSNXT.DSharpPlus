{"Name":"CloneExplicit<T>","Description":"Creates an explicit copy of the given enumerable where the only values copied are the ones you designate.","Author":"Daniel Gidman","SubmittedOn":"12/7/2010 5:41:39 PM","Entries":["/// <summary>\r\n/// Creates an explicit clone assignment of the enumerable list\r\n/// </summary>\r\n/// <param name=\"obj\">source enumeration</param>\r\n/// <param name=\"attributeAssignment\">Action that does the assignment\r\n/// <para>First parameter is the new item</para>\r\n/// <para>Second parameter is the source item</para></param>\r\n/// <returns></returns>\r\npublic static IEnumerable<T> CloneExplicit<T>(this IEnumerable<T> obj, Action<T, T> assign) where T : new()\r\n{\r\n    Func<T, Action<T>, T> chain = (x, y) =>\r\n    {\r\n        y(x);\r\n        return x;\r\n    };\r\n\r\n    return (from s in obj\r\n            select chain(new T(), t => assign(t, s))).ToList();\r\n}","IEnumerable<SelectListItem> YesNo = new Collection<SelectListItem>\r\n{\r\n\tnew SelectListItem { Text = \"Yes\", Value = bool.TrueString, Selected = true },\r\n\tnew SelectListItem { Text = \"No\", Value = bool.FalseString },\r\n};\r\n\r\nvar v = YesNo.CloneExplicit((t, s) => { t.Text = s.Text; t.Value = s.Value; });"]}