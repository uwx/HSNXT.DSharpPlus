{"Name":"CreateExcel","Description":"Transforms a DataTable in Excel (xls). Requires Excel Library (https://code.google.com/p/excellibrary/)","Author":"Raphael Augusto Ferroni Cardoso","SubmittedOn":"6/5/2014 2:13:30 PM","Entries":["/// <summary>\r\n/// Transforms a dataTable into Excel (xls). Requires Excel Library\r\n/// </summary>\r\n/// <param name=\"workSheetName\">Set a name for the WorkSheet. If not given, the same name of the DataTable is set</param>\r\n/// <returns></returns>\r\npublic static byte[] CreateExcel(this System.Data.DataTable dt, string workSheetName)\r\n{\r\n\tbyte[] excel = null;\r\n\r\n\tif (dt != null && dt.Rows.Count > 0)\r\n\t{\r\n\t\t// If a name has not been set for the WorkSheet, the name of the DataTable is set\r\n\t\tif (string.IsNullOrEmpty(workSheetName)) workSheetName = dt.TableName;\r\n\r\n\t\t// Create a new Workbook\r\n\t\tExcelLibrary.SpreadSheet.Workbook workbook = new ExcelLibrary.SpreadSheet.Workbook();\r\n\t\t// Creates a new Worksheet\r\n\t\tExcelLibrary.SpreadSheet.Worksheet worksheet = new ExcelLibrary.SpreadSheet.Worksheet(workSheetName);\r\n\r\n\t\t// Generates the columns excel according to the columns of the DataTable\r\n\t\tfor (int i = 0; i < dt.Columns.Count; i++)\r\n\t\t{\r\n\t\t\t// The first line will contain excel column names of DataTable\r\n\t\t\tworksheet.Cells[0, i] = new ExcelLibrary.SpreadSheet.Cell(dt.Columns[i].ColumnName);\r\n\t\t\t// Sets the column width\r\n\t\t\tworksheet.Cells.ColumnWidth[0, (ushort)i] = 3000;\r\n\t\t}\r\n\r\n\t\t// Generates rows with records from DataTable\r\n\t\tfor (int i = 0; i < dt.Rows.Count; i++)\r\n\t\t{\r\n\t\t\tfor (int j = 0; j < dt.Columns.Count; j++)\r\n\t\t\t{\r\n\t\t\t\t// Inserts the data in the DataTable rows and columns in Excel\r\n\t\t\t\tworksheet.Cells[i + 1, j] = new ExcelLibrary.SpreadSheet.Cell(dt.Rows[i][j].ToString());\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Insert blank lines to avoid error in excel file when the number of records is very small\r\n\t\tif (dt.Rows.Count < 100)\r\n\t\t{\r\n\t\t\tfor (int i = dt.Rows.Count + 1; i < (100 + dt.Rows.Count); i++)\r\n\t\t\t{\r\n\t\t\t\tworksheet.Cells[i, 0] = new ExcelLibrary.SpreadSheet.Cell(\"\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Adds the Worksheet to Workbook\r\n\t\tworkbook.Worksheets.Add(worksheet);\r\n\r\n\t\t// Generates the file in memory\r\n\t\tSystem.IO.MemoryStream stream = new System.IO.MemoryStream();\r\n\t\tworkbook.Save(stream);\r\n\r\n\t\t// Returns a byte array of Excel\r\n\t\texcel = stream.ToArray();\r\n\t}\r\n\r\n\treturn excel;\r\n}\r\n\r\n/// <summary>\r\n/// Transforms a dataTable into Excel (xls). Requires Excel Library\r\n/// </summary>\r\n/// <returns></returns>\r\npublic static byte[] CreateExcel(this System.Data.DataTable dt)\r\n{\r\n\treturn CreateExcel(dt, string.Empty);\r\n}","byte[] excel_sales = dataTable.CreateExcel(\"Sales\");\r\nbyte[] excel_customer = dataTable.CreateExcel(\"Customer\");"]}