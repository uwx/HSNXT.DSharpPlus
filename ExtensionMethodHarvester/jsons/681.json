{"Name":"Get","Description":"IDataReader extension to get values","Author":"Everton Thomas","SubmittedOn":"8/17/2017 8:49:31 PM","Entries":["public static T Get<T>(this IDataReader rd, string column)\r\n        {\r\n            return rd.Get(column, default(T));\r\n        }\r\n\r\n        public static T Get<T>(this IDataReader rd, string column, T defaultValue)\r\n        {\r\n            try\r\n            {\r\n                int ordinal = rd.GetOrdinal(column);\r\n\r\n                object value = rd[ordinal];\r\n\r\n                if (rd.IsDBNull(ordinal))\r\n                {\r\n                    value = defaultValue;\r\n                }\r\n\r\n                return (T)Convert.ChangeType(value, typeof(T));\r\n                \r\n            }\r\n            catch (Exception e)\r\n            {\r\n                throw new DataReaderParseFieldException($\"Erro na convers√£o de valores do atributo: [{column}] para tipo [{typeof(T)}]\", e);\r\n            }\r\n        }","int id = reader.Get(\"Id\", 10);\r\n                        string nome = reader.Get(\"Nome\", \"...\");\r\n                        DateTime nascimento = reader.Get(\"Nascimento\", DateTime.Now);\r\n                        float valor = reader.Get(\"Valor\", 0.05f);\r\n                        decimal valorDecimal = reader.Get(\"Valor\", new Decimal(15.75));"]}