{"Name":"IsNullOrEmpty","Description":"Determines whether a collection is null or has no elements without having to enumerate the entire collection to get a count.","Author":"Kelly Adams","SubmittedOn":"10/15/2010 7:08:35 PM","Entries":["/// <summary>\r\n/// Determines whether a collection is null or has no elements without having to enumerate the entire collection to get a count.  Uses LINQ.\r\n/// </summary>\r\n/// <typeparam name=\"T\">The item type.</typeparam>\r\n/// <param name=\"items\">The items.</param>\r\n/// <returns>\r\n/// <c>true</c> if this list is null or empty; otherwise, <c>false</c>.\r\n/// </returns>\r\npublic static bool IsNullOrEmpty<T>(this IList<T> items)\r\n{\r\n    return items == null || !items.Any();\r\n}","var list = new List<string>();\r\nlist.Add(\"Test1\");\r\nlist.Add(\"Test2\");\r\nAssert.IsFalse(list.IsNullOrEmpty());\r\nlist.Clear();\r\nAssert.IsTrue(list.IsNullOrEmpty());\r\nlist = null;\r\nAssert.IsTrue(list.IsNullOrEmpty());"]}