{"Name":"TrimDuplicates","Description":"Trims or removes duplicate delimited characters and leave only one instance of that character. If you like to have a comma delimited value and you like to remove excess commas, this extension method is for you. Other characters are supported too, this includes pipe and colon.","Author":"Earljon Hidalgo","SubmittedOn":"11/12/2010 7:12:13 AM","Entries":["static class Strings\r\n{\r\n\tpublic enum TrimType\r\n\t{\r\n\t\tComma,\r\n\t\tPipe,\r\n\t\tColon\r\n\t}\r\n\r\n\tpublic static string TrimDuplicates(this string input, TrimType trimType)\r\n\t{\r\n\t\tstring result = string.Empty;\r\n\r\n\t\tswitch (trimType)\r\n\t\t{\r\n\t\t\tcase TrimType.Comma:\r\n\t\t\t\tresult = input.TrimCharacter(',');\r\n\t\t\t\tbreak;\r\n\t\t\tcase TrimType.Pipe:\r\n\t\t\t\tresult = input.TrimCharacter('|');\r\n\t\t\t\tbreak;\r\n\t\t\tcase TrimType.Colon:\r\n\t\t\t\tresult = input.TrimCharacter(':');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate static string TrimCharacter(this string input, char character)\r\n\t{\r\n\t\tstring result = string.Empty;\r\n\r\n\t\tresult = string.Join(character.ToString(), input.Split(character)\r\n\t\t\t.Where(str => str != string.Empty)\r\n\t\t\t.ToArray());\r\n\r\n\t\treturn result;\r\n\t}\r\n}","static void Main(string[] args)\r\n{\r\n\tstring input = string.Empty;\r\n\r\n\tConsole.WriteLine(\"Clean Commas\");\r\n\tinput = \"justin,tesla,,nine,,,,,,elevate,,,joel\";\r\n\tConsole.WriteLine(\"INPUT: {0}\\nOUTPUT: {1}\\n\", input, input.TrimDuplicates(Strings.TrimType.Comma));\r\n\r\n\t// OUTPUTS: justin,tesla,nine,elevate,joel\r\n\r\n\tConsole.WriteLine(\"Clean Pipe\");\r\n\tinput = \"justin|tesla||nine||||||elevate|||joel\";\r\n\tConsole.WriteLine(\"INPUT: {0}\\nOUTPUT: {1}\\n\", input, input.TrimDuplicates(Strings.TrimType.Pipe));\r\n\r\n\t// OUTPUTS: justin|tesla|nine|elevate|joel\r\n\r\n\tConsole.WriteLine(\"Clean Colon\");\r\n\tinput = \"justin:tesla::nine::::::elevate:::joel\";\r\n\tConsole.WriteLine(\"INPUT: {0}\\nOUTPUT: {1}\\n\", input, input.TrimDuplicates(Strings.TrimType.Colon));\r\n\r\n\t// OUTPUTS: justin:tesla:nine:elevate:joel\r\n\r\n\tConsole.ReadLine();\r\n}"]}