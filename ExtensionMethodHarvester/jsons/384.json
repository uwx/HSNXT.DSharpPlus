{"Name":"IsDerived","Description":"Checks whether the type is derived from specified type or implemented of specified interface.","Author":"kevinjong","SubmittedOn":"3/24/2010 8:42:25 AM","Entries":["public static bool IsDerived<T>(this Type type)\r\n{\r\n\tType baseType = typeof(T);\r\n\r\n\tif(baseType.FullName == type.FullName)\r\n\t{\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif(type.IsClass)\r\n\t{\r\n\t\treturn baseType.IsClass\r\n\t\t\t? type.IsSubclassOf(baseType)\r\n\t\t\t: baseType.IsInterface \r\n\t\t\t\t? IsImplemented(type, baseType) \r\n\t\t\t\t: false;\r\n\t}\r\n\telse if(type.IsInterface && baseType.IsInterface)\r\n\t{\r\n\t\treturn IsImplemented(type, baseType);\r\n\t}\r\n\treturn false;\r\n}\r\n\r\npublic static bool IsImplemented(Type type, Type baseType)\r\n{\r\n\tType[] faces = type.GetInterfaces();\r\n\tforeach(Type face in faces)\r\n\t{\r\n\t\tif(baseType.Name.Equals(face.Name))\r\n\t\t{\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}","if(typeof(UserEntity).IsDerived<IExtend>())\r\n{\r\n\t// do something..\r\n}"]}