{"Name":"ToDictionary<>","Description":"Converts any object to a dictionary","Author":"mInternauta","SubmittedOn":"5/1/2016 12:30:45 AM","Entries":["/// <summary>\r\n        /// Convert the object properties to a dictionary\r\n        /// </summary>\r\n        /// <param name=\"source\"></param>\r\n        /// <returns></returns>\r\n        public static IDictionary<string, object> ToDictionary(this object source)\r\n        {\r\n            return source.ToDictionary<object>();\r\n        }\r\n\r\n        /// <summary>\r\n        /// Converts the object properties to a dictionary\r\n        /// </summary>\r\n        /// <typeparam name=\"T\"></typeparam>\r\n        /// <param name=\"source\"></param>\r\n        /// <returns></returns>\r\n        public static IDictionary<string, T> ToDictionary<T>(this object source)\r\n        {\r\n            if (source == null)\r\n                ThrowExceptionWhenSourceArgumentIsNull();\r\n\r\n            var dictionary = new Dictionary<string, T>();\r\n            foreach (PropertyDescriptor property in TypeDescriptor.GetProperties(source))\r\n                AddPropertyToDictionary<T>(property, source, dictionary);\r\n\r\n            return dictionary;\r\n        }\r\n\r\n        private static void AddPropertyToDictionary<T>(PropertyDescriptor property, object source, Dictionary<string, T> dictionary)\r\n        {\r\n            object value = property.GetValue(source);\r\n            if (IsOfType<T>(value))\r\n            {\r\n                dictionary.Add(property.Name, (T)value);\r\n            }\r\n            else\r\n            {\r\n                T newValue = (T)Convert.ChangeType(value, typeof(T));\r\n                dictionary.Add(property.Name, newValue);\r\n            }\r\n        }\r\n\r\n        private static bool IsOfType<T>(object value)\r\n        {\r\n            return value is T;\r\n        }\r\n\r\n        private static void ThrowExceptionWhenSourceArgumentIsNull()\r\n        {\r\n            throw new ArgumentNullException(\"source\", \"Unable to convert object to a dictionary. The source object is null.\");\r\n        }","class MyClass\r\n        {\r\n            public MyClass()\r\n            {\r\n                MyProperty = \"Value 1\";\r\n                MyProperty2 = \"Value 2\";\r\n                MyInt = 2;\r\n            }\r\n\r\n            public string MyProperty { get; set; }\r\n            public string MyProperty2 { get; set; }\r\n            public int MyInt { get; set; }\r\n        }\r\n\r\n        [TestMethod]\r\n        public void Test_ObjectToDictionary()\r\n        {\r\n            MyClass _Object = new MyClass();\r\n            IDictionary<string, string> dic \r\n                = _Object.ToDictionary<string>();\r\n        }"]}