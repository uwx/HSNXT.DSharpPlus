{"Name":"WhereStringIsNotNullOrEmpty","Description":"Where string is not null or empty extension method for NHibernate 3.0 and its new query API QueryOver.","Author":"Richard","SubmittedOn":"6/25/2016 12:04:46 AM","Entries":["public static IQueryOver<TRoot, TSubType> WhereStringIsNotNullOrEmpty<TRoot, TSubType>(this IQueryOver<TRoot, TSubType> query, Expression<Func<TRoot, string>> expression)\r\n{\r\n\treturn WhereStringIsNotNullOrEmpty(query, expression.Body);            \r\n}\r\n\r\npublic static IQueryOver<TRoot, TSubType> WhereStringIsNotNullOrEmpty<TRoot, TSubType>(this IQueryOver<TRoot, TSubType> query, Expression<Func<string>> expression)\r\n{\r\n\treturn WhereStringIsNotNullOrEmpty(query, expression.Body);            \r\n}\r\n\r\nprivate static IQueryOver<TRoot, TSubType> WhereStringIsNotNullOrEmpty<TRoot, TSubType>(IQueryOver<TRoot, TSubType> query, System.Linq.Expressions.Expression expression)\r\n{\r\n\tvar projectionInfo = ExpressionProcessor.FindMemberProjection(expression);\r\n\tvar property = projectionInfo.AsProjection();\r\n\r\n\tvar criteria = Restrictions.Or(Restrictions.IsNull(property), Restrictions.Eq(Projections.SqlFunction(\"trim\", NHibernateUtil.String, property), \"\"));\r\n\treturn query.Where(Restrictions.Not(criteria));\r\n}","public class TeamEmployeeRepository : Repository<TeamEmployee>, ITeamEmployeeRepository\r\n{\r\n    public IEnumerable<TeamEmployee> GetEmployees()\r\n    {\r\n        return GetSession().QueryOver<TeamEmployee>()\r\n\t\t\t\t\t\t   .WhereStringIsNotNullOrEmpty(p => p.Name)\r\n\t\t\t\t\t       .Future();\r\n    }\r\n}\r\n\r\nOr by alias...\r\n\r\npublic class TeamEmployeeRepository : Repository<TeamEmployee>, ITeamEmployeeRepository\r\n{\r\n    public IEnumerable<TeamEmployee> GetEmployees()\r\n    {\r\n\t\tTeamEmployee TeamEmployeeAlias = null; \r\n        return GetSession().QueryOver<TeamEmployee>(() => TeamEmployeeAlias)\r\n\t\t\t\t\t\t   .WhereStringIsNotNullOrEmpty(() => TeamEmployeeAlias.Name)\r\n\t\t\t\t\t       .Future();\r\n    }\r\n}"]}