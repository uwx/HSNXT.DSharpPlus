{"Name":"GetValueOrDefault<T> for DbDataReader","Description":"Helper method to retrieve a nullable value of a column from a datareader.","Author":"Fons Sonnemans","SubmittedOn":"2/1/2009 6:26:35 PM","Entries":["public static class DataAccessHelper {\r\n\r\n    public static T GetValueOrDefault<T>(this DbDataReader dr, \r\n                                                      string name) {\r\n        object value = dr[name];\r\n        if (DBNull.Value == value) return default(T);\r\n        return (T)value;\r\n    }\r\n\r\n    public static T GetValueOrDefault<T>(this DbDataReader dr, \r\n                                                        int index) {\r\n        if (dr.IsDBNull(index)) return default(T);\r\n        return (T)dr[index];\r\n    }\r\n\r\n    public static bool IsDBNull(this DbDataReader dr, string name) {\r\n        return dr.IsDBNull(dr.GetOrdinal(name));\r\n    }\r\n}","private List<Book> CreateTitles(SqlDataReader rdr) {\r\n    List<Book> result = new List<Book>();\r\n    while (rdr.Read()) {\r\n        Book b = new Book();\r\n        \r\n        // NOT NULL columns\r\n        b.ID = (string)rdr[\"title_id\"];\r\n        b.Title = (string)rdr[\"title\"];\r\n        \r\n        // NULL column\r\n        b.Price = rdr.GetValueOrDefault<decimal?>(\"price\");\r\n        \r\n        result.Add(b);\r\n    }\r\n    return result;\r\n}"]}