{"Name":"CSVSplit","Description":"Given a line from a CSV-encoded file, split it into fields.","Author":"David Bakin","SubmittedOn":"3/8/2009 5:18:13 AM","Entries":["private enum CSVSplitState\r\n{\r\n    Normal,\r\n    InQuotes,\r\n    InQuotesFoundQuote\r\n}\r\n\r\npublic static IEnumerable<string> CSVSplit ( this string s )\r\n{\r\n    CSVSplitState state = CSVSplitState.Normal;\r\n    StringBuilder token = new StringBuilder();\r\n    foreach ( char c in s )\r\n    {\r\n        switch ( state )\r\n        {\r\n            case CSVSplitState.Normal:\r\n                if ( c == ',' )\r\n                {\r\n                    yield return token.ToString();\r\n                    token = new StringBuilder();\r\n                }\r\n                else if ( c == '\"' )\r\n                    state = CSVSplitState.InQuotes;\r\n                else\r\n                    token.Append ( c );\r\n                break;\r\n\r\n            case CSVSplitState.InQuotes:\r\n                if ( c == '\"' )\r\n                    state = CSVSplitState.InQuotesFoundQuote;\r\n                else\r\n                    token.Append( c );\r\n                break;\r\n\r\n            case CSVSplitState.InQuotesFoundQuote:\r\n                if ( c == '\"' )\r\n                {\r\n                    token.Append( c );\r\n                    state = CSVSplitState.InQuotes;\r\n                }\r\n                else\r\n                {\r\n                    state = CSVSplitState.Normal;\r\n                    goto case CSVSplitState.Normal;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    yield return token.ToString();\r\n}","\"this,\\\"that, those\\\",\\\"the other\\\", \"embedded\\\"\\\"quote\\\"\" =>\r\n\r\n    string[] {\r\n        \"this\",\r\n        \"that, those\",\r\n        \"the other\",\r\n        \"embedded\\\"quote\" \r\n    }"]}