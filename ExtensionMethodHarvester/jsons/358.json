{"Name":"ToStringReccurent","Description":"Sometimes it is required to collect exception information in textual format. This method serializes general info about exception and all included exceptions reccursively. I'm using this for sending email error reports.","Author":"Andriy Kvasnytsya","SubmittedOn":"5/22/2009 10:19:19 AM","Entries":["public static string ToStringReccurent(this Exception exception)\r\n{\r\n\tif (exception == null)\r\n\t{\r\n\t\treturn \"empty\";\r\n\t}\r\n\treturn string.Format\r\n\t\t(\"Exception: {0}\\nMessage: {1}\\nStack Trace: {2}\\nInner {3}\", exception.GetType(),\r\n\t\t\texception.Message, exception.StackTrace, exception.InnerException.ToStringReccurent());\r\n}","private void appDispatcherUnhandledException(object sender, DispatcherUnhandledExceptionEventArgs e)\r\n{\r\n\te.Handled = true;\r\n\tMessageBox.Show(\"Application encountered an error, sorry for inconvinience.\", \"Error\", MessageBoxButton.OK, MessageBoxImage.Hand);\r\n\tProcess.Start(string.Format(\"mailto:{0}?subject={1}&body={2}\", DeveloperEMail,\r\n\t\t\"StatusFlags Exception\", e.Exception.ToStringReccurent().UrlEncode()));\r\n\tShutdown();\r\n}"]}