{"Name":"IsIsin","Description":"Determines if a string is a valid ISIN (International Securities Identification Number) code.","Author":"JP Negri","SubmittedOn":"3/31/2011 8:22:04 PM","Entries":["/// <summary>\r\n    /// Determines if a string is a valid ISIN (International Securities Identification Number) code\r\n    /// </summary>\r\n    /// <remarks>\r\n        /// Port from Java code at http://en.wikipedia.org/wiki/International_Securities_Identification_Number\r\n        /// </remarks>\r\n    public static class IsinHelper\r\n    {\r\n        private static readonly Regex Pattern = new Regex(\"[A-Z]{2}([A-Z0-9]){10}\", RegexOptions.Compiled);\r\n\r\n        /// <summary>\r\n        /// True se a string passada for um ISIN v√°lido\r\n        /// </summary>\r\n        public static bool IsIsin(this string isin)\r\n        {\r\n            if (string.IsNullOrEmpty(isin))\r\n            {\r\n                return false;\r\n            }\r\n            if (!Pattern.IsMatch(isin))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            var digits = new int[22];\r\n            int index = 0;\r\n            for (int i = 0; i < 11; i++)\r\n            {\r\n                char c = isin[i];\r\n                if (c >= '0' && c <= '9')\r\n                {\r\n                    digits[index++] = c - '0';\r\n                }\r\n                else if (c >= 'A' && c <= 'Z')\r\n                {\r\n                    int n = c - 'A' + 10;\r\n                    int tens = n/10;\r\n                    if (tens != 0)\r\n                    {\r\n                        digits[index++] = tens;\r\n                    }\r\n                    digits[index++] = n%10;\r\n                }\r\n                else\r\n                {\r\n                    // Not a digit or upper-case letter.\r\n                    return false;\r\n                }\r\n            }\r\n            int sum = 0;\r\n            for (int i = 0; i < index; i++)\r\n            {\r\n                int digit = digits[index - 1 - i];\r\n                if (i%2 == 0)\r\n                {\r\n                    digit *= 2;\r\n                }\r\n                sum += digit/10;\r\n                sum += digit%10;\r\n            }\r\n\r\n            int checkDigit = isin[11] - '0';\r\n            if (checkDigit < 0 || checkDigit > 9)\r\n            {\r\n                // Not a digit.\r\n                return false;\r\n            }\r\n            int tensComplement = (sum%10 == 0) ? 0 : ((sum/10) + 1)*10 - sum;\r\n            return checkDigit == tensComplement;\r\n        }\r\n    }","string s = \"US0378331005\";\r\nDebug.Assert(s.IsIsin());\r\n\r\ns = \"AU0000XVGZA3\";\r\nDebug.Assert(s.IsIsin());\r\n\r\ns = \"GB0002634946\";\r\nDebug.Assert(s.IsIsin());\r\n\r\ns = null;\r\nDebug.Assert(!s.IsIsin());\r\n\r\ns = \"\";\r\nDebug.Assert(!s.IsIsin());\r\n\r\ns = \"us0378331005\"; // lowercase\r\nDebug.Assert(!s.IsIsin());\r\n\r\ns = \"US0378331004\"; // wrong digit\r\nDebug.Assert(!s.IsIsin());"]}