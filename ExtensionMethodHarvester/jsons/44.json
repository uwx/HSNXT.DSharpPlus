{"Name":"SetSocketKeepAliveValues","Description":"Using IOControl code to configue socket KeepAliveValues for line disconnection detection(because default is toooo slow)","Author":"[T] NepTunic","SubmittedOn":"3/22/2010 3:15:12 AM","Entries":["/// <summary>\r\n/// Using IOControl code to configue socket KeepAliveValues for line disconnection detection(because default is toooo slow) \r\n/// </summary>\r\n/// <param name=\"tcpc\">TcpClient</param>\r\n/// <param name=\"KeepAliveTime\">The keep alive time. (ms)</param>\r\n/// <param name=\"KeepAliveInterval\">The keep alive interval. (ms)</param>\r\npublic static void SetSocketKeepAliveValues(this TcpClient tcpc, int KeepAliveTime, int KeepAliveInterval)\r\n{    \r\n    //KeepAliveTime: default value is 2hr\r\n    //KeepAliveInterval: default value is 1s and Detect 5 times\r\n   \r\n    uint dummy = 0; //lenth = 4\r\n    byte[] inOptionValues = new byte[System.Runtime.InteropServices.Marshal.SizeOf(dummy) * 3]; //size = lenth * 3 = 12\r\n    bool OnOff = true;\r\n\r\n    BitConverter.GetBytes((uint)(OnOff ? 1 : 0)).CopyTo(inOptionValues, 0);\r\n    BitConverter.GetBytes((uint)KeepAliveTime).CopyTo(inOptionValues, Marshal.SizeOf(dummy));\r\n    BitConverter.GetBytes((uint)KeepAliveInterval).CopyTo(inOptionValues, Marshal.SizeOf(dummy) * 2);\r\n    // of course there are other ways to marshal up this byte array, this is just one way\r\n    // call WSAIoctl via IOControl\r\n\r\n    // .net 1.1 type\r\n    //int SIO_KEEPALIVE_VALS = -1744830460; //(or 0x98000004)\r\n    //socket.IOControl(SIO_KEEPALIVE_VALS, inOptionValues, null); \r\n\r\n    // .net 3.5 type\r\n    tcpc.Client.IOControl(IOControlCode.KeepAliveValues, inOptionValues, null);\r\n}","TcpClient t = new TcpClient();\r\nt.SetSocketKeepAliveValues(300000, 1000);"]}