{"Name":"ScaleImage","Description":"Scales a Image to make it fit inside of a Height/Width","Author":"Robert Booth","SubmittedOn":"3/30/2009 10:27:44 PM","Entries":["public static Image ScaleImage(this Image img, int height, int width)\r\n        {\r\n            if (img == null || height <= 0 || width <= 0)\r\n            {\r\n                return null;\r\n            }\r\n            int newWidth = (img.Width * height) / (img.Height);\r\n            int newHeight = (img.Height * width) / (img.Width);\r\n            int x = 0;\r\n            int y = 0;\r\n\r\n            Bitmap bmp = new Bitmap(width, height);\r\n            Graphics g = Graphics.FromImage(bmp);\r\n            g.InterpolationMode = System.Drawing.Drawing2D.InterpolationMode.HighQualityBilinear;\r\n\r\n            // use this when debugging.\r\n            //g.FillRectangle(Brushes.Aqua, 0, 0, bmp.Width - 1, bmp.Height - 1);\r\n            if (newWidth > width)\r\n            {\r\n                // use new height\r\n                x = (bmp.Width - width) / 2;\r\n                y = (bmp.Height - newHeight) / 2;\r\n                g.DrawImage(img, x, y, width, newHeight);\r\n            }\r\n            else\r\n            {\r\n                // use new width\r\n                x = (bmp.Width / 2) - (newWidth / 2);\r\n                y = (bmp.Height / 2) - (height / 2);\r\n                g.DrawImage(img, x, y, newWidth, height);\r\n            }\r\n            // use this when debugging.\r\n            //g.DrawRectangle(new Pen(Color.Red, 1), 0, 0, bmp.Width - 1, bmp.Height - 1);\r\n            return bmp;\r\n        }","Image test = someImg.ScaleImage(591, 1096);"]}