{"Name":"IsValidNIP, IsValidREGON, IsValidPESEL","Description":"Validation algorithms for Polish identification numbers NIP, REGON & PESEL.","Author":"Marcin Kozub","SubmittedOn":"3/22/2012 10:08:31 PM","Entries":["public static class Validators\r\n{\r\n    public static bool IsValidNIP(this string input)\r\n    {\r\n        int[] weights = { 6, 5, 7, 2, 3, 4, 5, 6, 7 };\r\n        bool result = false;\r\n        if (input.Length == 10)\r\n        {\r\n            int controlSum = CalculateControlSum(input, weights);\r\n            int controlNum = controlSum % 11;\r\n            if (controlNum == 10)\r\n            {\r\n                controlNum = 0;\r\n            }\r\n            int lastDigit = int.Parse(input[input.Length - 1].ToString());\r\n            result = controlNum == lastDigit;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public static bool IsValidREGON(this string input)\r\n    {\r\n        int controlSum;\r\n        if (input.Length == 7 || input.Length == 9)\r\n        {\r\n            int[] weights = { 8, 9, 2, 3, 4, 5, 6, 7 };\r\n            int offset = 9 - input.Length;\r\n            controlSum = CalculateControlSum(input, weights, offset);\r\n        }\r\n        else if (input.Length == 14)\r\n        {\r\n            int[] weights = { 2, 4, 8, 5, 0, 9, 7, 3, 6, 1, 2, 4, 8 };\r\n            controlSum = CalculateControlSum(input, weights);\r\n        }\r\n        else\r\n        {\r\n            return false;\r\n        }\r\n            \r\n        int controlNum = controlSum % 11;\r\n        if (controlNum == 10)\r\n        {\r\n            controlNum = 0;\r\n        }\r\n        int lastDigit = int.Parse(input[input.Length - 1].ToString());\r\n\r\n        return controlNum == lastDigit;\r\n    }\r\n\r\n    public static bool IsValidPESEL(this string input)\r\n    {\r\n        int[] weights = { 1, 3, 7, 9, 1, 3, 7, 9, 1, 3 };\r\n        bool result = false;\r\n        if (input.Length == 11)\r\n        {\r\n            int controlSum = CalculateControlSum(input, weights);\r\n            int controlNum = controlSum % 10;\r\n            controlNum = 10 - controlNum;\r\n            if (controlNum == 10)\r\n            {\r\n                controlNum = 0;\r\n            }\r\n            int lastDigit = int.Parse(input[input.Length - 1].ToString());\r\n            result = controlNum == lastDigit;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private static int CalculateControlSum(string input, int[] weights, int offset = 0)\r\n    {\r\n        int controlSum = 0;\r\n        for (int i = 0; i < input.Length - 1; i++)\r\n        {\r\n            controlSum += weights[i + offset] * int.Parse(input[i].ToString());\r\n        }\r\n        return controlSum;\r\n    }\r\n}","string nip = \"1234567890\";\r\nstring regon = \"123456789\";\r\nstring pesel = \"12345678901\";\r\n\r\nConsole.WriteLine(nip.IsValidNIP() ? \"NIP is valid\" : \"NIP is not valid\");\r\nConsole.WriteLine(regon.IsValidREGON() ? \"REGON is valid\" : \"REGON is not valid\");\r\nConsole.WriteLine(pesel.IsValidPESEL() ? \"PESEL is valid\" : \"PESEL is not valid\");"]}