{"Name":"IsDefault","Description":"Returns true if the object it is called upon is the default of its type. This will be null for referece types, zero for integer types, and a default-initialized struct for structs.","Author":"James Michael Hare (BlackRabbitCoder)","SubmittedOn":"10/14/2010 6:18:14 PM","Entries":["/// <summary>\r\n/// To include functions for validation on basic data types i.e. if value is default or null\r\n/// </summary>    \r\npublic static class ObjectExtensions\r\n{\r\n\t/// <summary>\r\n\t/// Checks to see if the object has null default value for basic types\r\n\t/// </summary>\r\n\t/// <typeparam name=\"T\">Type of object being passed</typeparam>\r\n\t/// <param name=\"value\">Object whose value needs to be checked</param>\r\n\t/// <returns>true if the value is null default. Otherwise returns false</returns>\r\n\tpublic static bool IsDefault<T>(this T value)\r\n\t{\r\n\t\treturn (Equals(value, default(T)));\r\n\t}\r\n}","if (someObject.IsDefault())\r\n{\r\n   ...\r\n}"]}