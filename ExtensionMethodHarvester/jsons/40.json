{"Name":"Truncate","Description":"Truncate the specified string based on the given length. Replaces the truncated data to \"...\"","Author":"Earljon Hidalgo","SubmittedOn":"4/23/2008 7:11:49 PM","Entries":["public static class StringEx\r\n{\r\n\t/// <summary>\r\n\t/// Truncates the string to a specified length and replace the truncated to a ...\r\n\t/// </summary>\r\n\t/// <param name=\"text\">string that will be truncated</param>\r\n\t/// <param name=\"maxLength\">total length of characters to maintain before the truncate happens</param>\r\n\t/// <returns>truncated string</returns>\r\n\tpublic static string Truncate(this string text, int maxLength)\r\n\t{\r\n\t\t// replaces the truncated string to a ...\r\n\t\tconst string suffix = \"...\";\r\n\t\tstring truncatedString = text;\r\n\r\n\t\tif (maxLength <= 0) return truncatedString;\r\n\t\tint strLength = maxLength - suffix.Length;\r\n\r\n\t\tif (strLength <= 0) return truncatedString;\r\n\r\n\t\tif (text == null || text.Length <= maxLength) return truncatedString;\r\n\r\n\t\ttruncatedString = text.Substring(0, strLength);\r\n\t\ttruncatedString = truncatedString.TrimEnd();\r\n\t\ttruncatedString += suffix;\r\n\t\treturn truncatedString;\r\n\t}\r\n}","string newText = \"this is the palce i want to be, Cindys is the place to be!\";\r\nConsole.WriteLine(\"New Text: {0}\", newText.Truncate(40));"]}