{"Name":"ConvertTo<T>","Description":"Converts an Array of arbitrary type to an array of type T. If a suitable converter cannot be found to do the conversion, a NotSupportedException is thrown.","Author":"Brandon Siegel","SubmittedOn":"6/3/2008 11:06:18 PM","Entries":["public static T[] ConvertTo<T>(this Array ar) {\r\n    T[] ret = new T[ar.Length];\r\n    System.ComponentModel.TypeConverter tc = System.ComponentModel.TypeDescriptor.GetConverter(typeof(T));\r\n    if (tc.CanConvertFrom(ar.GetValue(0).GetType())) {\r\n        for (int i = 0; i < ar.Length; i++) {\r\n            ret[i] = (T) tc.ConvertFrom(ar.GetValue(i));\r\n        }\r\n    }\r\n    else {\r\n        tc = System.ComponentModel.TypeDescriptor.GetConverter(ar.GetValue(0).GetType());\r\n        if (tc.CanConvertTo(typeof(T))) {\r\n            for (int i = 0; i < ar.Length; i++) {\r\n                ret[i] = (T) tc.ConvertTo(ar.GetValue(i), typeof(T));\r\n            }\r\n        }\r\n        else {\r\n            throw new NotSupportedException();\r\n        }\r\n    }\r\n    return ret;\r\n}","int[] ipParts = Request.UserHostAddress.Split('.').ConvertTo<int>();"]}