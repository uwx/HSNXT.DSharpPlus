{"Name":"REExtract","Description":"Extracts all fields from a string that match a certain regex. Will convert to desired type through a standard TypeConverter.","Author":"David Bakin","SubmittedOn":"2/28/2009 7:25:48 AM","Entries":["public static T[ ] REExtract<T>( this string s, string regex )\r\n{\r\n    TypeConverter tc = TypeDescriptor.GetConverter( typeof( T ) );\r\n    if ( !tc.CanConvertFrom( typeof( string ) ) )\r\n    {\r\n        throw new ArgumentException( \"Type does not have a TypeConverter from string\", \"T\" );\r\n    }\r\n    if ( !string.IsNullOrEmpty( s ) )\r\n    {\r\n        return \r\n            Regex.Matches( s, regex )\r\n            .Cast<Match>( )\r\n            .Select( f => f.ToString( ) )\r\n            .Select( f => ( T )tc.ConvertFrom( f ) )\r\n            .ToArray( );\r\n    }\r\n    else\r\n        return new T[ 0 ];\r\n}","public static int[ ] ExtractInts( this string s )\r\n{\r\n    return s.REExtract<int>( @\"\\d+\" );\r\n}\r\n\r\nint[] a = \"Some primes: 2, 5, 11, and 17\".ExtractInts();\r\n// a == { 2, 5, 11, 17 }"]}