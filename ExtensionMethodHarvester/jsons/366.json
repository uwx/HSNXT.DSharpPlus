{"Name":"GetAttributes","Description":"Gets an enumeration of assembly attributes of the specified type from the assembly it is called from.","Author":"James Michael Hare (BlackRabbitCoder)","SubmittedOn":"10/14/2010 6:06:27 PM","Entries":["using System;\r\nusing System.Collections.Generic;\r\nusing System.Reflection;\r\n\r\n/// <summary>\r\n/// Extension methods for dealing with an assembly\r\n/// </summary>\r\npublic static class AssemblyExtensions\r\n{\r\n\t/// <summary>\r\n\t/// Gets the attributes from an assembly.\r\n\t/// </summary>\r\n\t/// <typeparam name=\"T\">The type of the custom attribute to find.</typeparam>\r\n\t/// <param name=\"callingAssembly\">The calling assembly to search.</param>\r\n\t/// <returns>An enumeration of attributes of type T that were found.</returns>\r\n\tpublic static IEnumerable<T> GetAttributes<T>(this Assembly callingAssembly)\r\n\t\twhere T : Attribute\r\n\t{\r\n\t\t// Try to find the configuration attribute for the default logger if it exists\r\n\t\tobject[] configAttributes = Attribute.GetCustomAttributes(callingAssembly,\r\n\t\t\ttypeof(T), false);\r\n\r\n\t\tif (configAttributes != null)\r\n\t\t{\r\n\t\t\tforeach (T attribute in configAttributes)\r\n\t\t\t{\r\n\t\t\t\tyield return attribute;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","var attributes = Assembly.GetExecutingAssembly().GetAttributes<InstallPerformanceCounterAttribute>();"]}