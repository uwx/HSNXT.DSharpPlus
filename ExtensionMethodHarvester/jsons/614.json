{"Name":"ToNullable<> Generic String Extension","Description":"Converts a string to a primitive type T, or an enum type T. Faster than tryparse blocks. Easier to use, too. Very efficient. Uses generics so the code is cleaner and more robust than doing a separate convert method for each primitive type.","Author":"Taylor A Love","SubmittedOn":"5/23/2016 9:33:04 PM","Entries":["/// <summary>\r\n        /// <para>More convenient than using T.TryParse(string, out T). \r\n        /// Works with primitive types, structs, and enums.\r\n        /// Tries to parse the string to an instance of the type specified.\r\n        /// If the input cannot be parsed, null will be returned.\r\n        /// </para>\r\n        /// <para>\r\n        /// If the value of the caller is null, null will be returned.\r\n        /// So if you have \"string s = null;\" and then you try \"s.ToNullable...\",\r\n        /// null will be returned. No null exception will be thrown. \r\n        /// </para>\r\n        /// </summary>\r\n        /// <typeparam name=\"T\"></typeparam>\r\n        /// <param name=\"p_self\"></param>\r\n        /// <returns></returns>\r\n        public static T? ToNullable<T>(this string p_self) where T : struct\r\n        {\r\n            if (!string.IsNullOrEmpty(p_self))\r\n            {\r\n                var converter = System.ComponentModel.TypeDescriptor.GetConverter(typeof(T));\r\n                if (converter.IsValid(p_self)) return (T)converter.ConvertFromString(p_self);\r\n                if (typeof(T).IsEnum) { T t; if (Enum.TryParse<T>(p_self, out t)) return t;}\r\n            }\r\n\r\n            return null;\r\n        }","int? numVotes = \"123\".ToNullable<int>();\r\ndecimal price = tbxPrice.Text.ToNullable<decimal>() ?? 0.0M;\r\nPetTypeEnum petType = \"Cat\".ToNullable<PetTypeEnum>() ?? PetTypeEnum.DefaultPetType;\r\nPetTypeEnum petTypeByIntValue = \"2\".ToNullable<PetTypeEnum>() ?? PetTypeEnum.DefaultPetType;\r\n \r\nstring thisWillNotThrowException = null;\r\nint? nullsAreSafe = thisWillNotThrowException.ToNullable<int>();\r\n// More examples here: https://github.com/Pangamma/PangammaUtilities-CSharp/blob/master/TestExamples/ToNullableStringExtensionTests.cs"]}