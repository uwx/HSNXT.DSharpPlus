{"Name":"WPF Controls Lists","Description":"Using extensions to provide a similar \"Winforms.Controls\" collection functionality. When implementing generics with System.Windows.Window extensions the VS2013 compiler starts throwing random exceptions, so following is using a static wrapper and each control type has to separated. On tested using VS2013..","Author":"Tom Kelly","SubmittedOn":"6/26/2014 5:46:10 PM","Entries":["public static class WPFWindowExtensions\r\n    {\r\n\r\n        public static string NameSpace(this Window window)\r\n        {\r\n           Type myType = window.GetType();\r\n           return myType.Namespace;\r\n        }\r\n\r\n        public static List<Button> ToListButtonControls(this Window window)\r\n        {\r\n            return WindowControls.GetCollection<Button>(window);\r\n        }\r\n\r\n        public static List<Label> ToListLabelControls(this Window window)\r\n        {\r\n            return WindowControls.GetCollection<Label>(window);\r\n        }\r\n\r\n        public static List<TextBox> ToListTextBoxControls(this Window window)\r\n        {\r\n            return WindowControls.GetCollection<TextBox>(window);\r\n        }\r\n\r\n        public static List<Grid> ToListGridControls(this Window window)\r\n        {\r\n            return WindowControls.GetCollection<Grid>(window);\r\n        }\r\n\r\n        public static List<StackPanel> ToListStackPanelControls(this Window window)\r\n        {\r\n            return WindowControls.GetCollection<StackPanel>(window);\r\n        }\r\n\r\n    }\r\n\r\npublic static class WindowControls\r\n    {\r\n        public static List<T> GetCollection<T>(object parent) where T : DependencyObject\r\n        {\r\n            List<T> logicalCollection = new List<T>();\r\n            GetLogicalChildCollection(parent as DependencyObject, logicalCollection);\r\n            return logicalCollection;\r\n        }\r\n        private static void GetLogicalChildCollection<T>(DependencyObject parent, List<T> logicalCollection) where T : DependencyObject\r\n        {\r\n            IEnumerable children = LogicalTreeHelper.GetChildren(parent);\r\n            foreach (object child in children)\r\n            {\r\n                if (child is DependencyObject)\r\n                {\r\n                    DependencyObject depChild = child as DependencyObject;\r\n                    if (child is T)\r\n                    {\r\n                        logicalCollection.Add(child as T);\r\n                    }\r\n                    GetLogicalChildCollection(depChild, logicalCollection);\r\n                }\r\n            }\r\n        }\r\n    }","List<System.Windows.Controls.TextBox> textboxes = this.ToListTextBoxControls();\r\n\r\nthis.ToListButtonControls()\r\nthis.ToListGridControls\r\nthis.ToListLabelControls\r\nthis.ToListTextBoxControls\r\nthis.ToListStackPanelControls"]}