{"Name":"CopyAsync","Description":"Method for copying a folder to a new location","Author":"Dave Smits","SubmittedOn":"5/6/2014 11:57:01 AM","Entries":["/// <summary>\r\n        /// Method for copying a folder to a new location\r\n        /// </summary>\r\n        /// <param name=\"folder\">source</param>\r\n        /// <param name=\"target\">target location</param>\r\n        /// <param name=\"option\">What to do then there is a collision</param>\r\n        /// <returns></returns>\r\n        public static async Task CopyAsync(this StorageFolder folder, StorageFolder target, CreationCollisionOption option)\r\n        {\r\n            var targetfolder = await target.CreateFolderAsync(folder.Name, option).AsTask().ConfigureAwait(false);\r\n            var subfolders = await folder.GetFoldersAsync().AsTask().ConfigureAwait(false);\r\n            foreach(var subfolder in subfolders)\r\n            {\r\n                await subfolder.CopyAsync(targetfolder, option).ConfigureAwait(false);\r\n            }\r\n            var files = await folder.GetFilesAsync().AsTask().ConfigureAwait(false);\r\n            foreach(var file in files)\r\n            {\r\n                await file.CopyAsync(targetfolder).AsTask().ConfigureAwait(false);\r\n            }\r\n        }","public async void CopyDemo()\r\n        {\r\n            var newfolder = await ApplicationData.Current.LocalFolder.CreateFolderAsync(\"new folder\");\r\n            var newfile = await newfolder.CreateFileAsync(\"testfile\");\r\n            var targetfolder = await ApplicationData.Current.LocalFolder.CreateFolderAsync(\"target\");\r\n\r\n            await newfolder.CopyAsync(targetfolder, CreationCollisionOption.ReplaceExisting);\r\n        }"]}