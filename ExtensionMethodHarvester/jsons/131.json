{"Name":"GetValueOrDefault","Description":"Some time you want to get a nested property but a property in the chain is null then to avoid exception of Null Exception you must check all property in chain opposite of null","Author":"Reza Arab Ghaeni","SubmittedOn":"12/26/2012 7:54:56 AM","Entries":["public static T2 GetValueOrDefault<T1, T2>(this T1 prop1, Func<T1, T2> prop2)\r\n        {\r\n            return prop1 != null ? prop2(prop1) : default(T2);\r\n        }\r\n\r\n        public static T3 GetValueOrDefault<T1, T2, T3>(this T1 prop1, Func<T1, T2> prop2, Func<T2, T3> prop3)\r\n        {\r\n            var prop = prop1.GetValueOrDefault(prop2);\r\n            return Comparer<T2>.Default.Compare(prop, default(T2)) != 0 ? prop3(prop) : default(T3);\r\n        }\r\n\r\n        public static T4 GetValueOrDefault<T1, T2, T3, T4>(this T1 prop1, Func<T1, T2> prop2, Func<T2, T3> prop3, Func<T3, T4> prop4)\r\n        {\r\n            var prop = prop1.GetValueOrDefault(prop2, prop3);\r\n            return Comparer<T3>.Default.Compare(prop, default(T3)) != 0 ? prop4(prop) : default(T4);\r\n        }\r\n\r\n        public static T5 GetValueOrDefault<T1, T2, T3, T4, T5>(this T1 prop1, Func<T1, T2> prop2, Func<T2, T3> prop3, Func<T3, T4> prop4, Func<T4, T5> prop5)\r\n        {\r\n            var prop = prop1.GetValueOrDefault(prop2, prop3, prop4);\r\n            return Comparer<T4>.Default.Compare(prop, default(T4)) != 0 ? prop5(prop) : default(T5);\r\n        }\r\n\r\n        public static T6 GetValueOrDefault<T1, T2, T3, T4, T5, T6>(this T1 prop1, Func<T1, T2> prop2, Func<T2, T3> prop3, Func<T3, T4> prop4, Func<T4, T5> prop5, Func<T5, T6> prop6)\r\n        {\r\n            var prop = prop1.GetValueOrDefault(prop2, prop3, prop4, prop5);\r\n            return Comparer<T5>.Default.Compare(prop, default(T5)) != 0 ? prop6(prop) : default(T6);\r\n        }\r\n\r\n        public static T7 GetValueOrDefault<T1, T2, T3, T4, T5, T6, T7>(this T1 prop1, Func<T1, T2> prop2, Func<T2, T3> prop3, Func<T3, T4> prop4, Func<T4, T5> prop5, Func<T5, T6> prop6, Func<T6, T7> prop7)\r\n        {\r\n            var prop = prop1.GetValueOrDefault(prop2, prop3, prop4, prop5, prop6);\r\n            return Comparer<T6>.Default.Compare(prop, default(T6)) != 0 ? prop7(prop) : default(T7);\r\n        }","class A { public B b { get; set; } }\r\nclass B { public C c { get; set; } }\r\nclass C { public D d { get; set; } }\r\nclass D { public int value { get; set; } }\r\n\r\nvar a = new A();\r\na.b = new B();\r\na.b.c = null;\r\nvar temp = a.b.c.d.value;//Exception!\r\nvar betterTemp=a.GetValueOrDefault(p=>p.b,p=>p.c,p=>p.d,p=>p.value);\r\n//better is null without exception"]}