{"Name":"Replace","Description":"This extension method replaces an item in a collection that implements the ilist<t> interface","Author":"Otto Beragg","SubmittedOn":"3/5/2008 3:20:09 PM","Entries":["/// <summary>\r\n/// This extension method replaces an item in a collection that implements the IList interface.\r\n/// </summary>\r\n/// <typeparam name=\"T\">The type of the field that we are manipulating</typeparam>\r\n/// <param name=\"thisList\">The input list</param>\r\n/// <param name=\"position\">The position of the old item</param>\r\n/// <param name=\"item\">The item we are goint to put in it's place</param>\r\n/// <returns>True in case of a replace, false if failed</returns>\r\npublic static bool Replace<T>(this IList<T> thisList, int position, T item)\r\n{\r\n   if (position > thisList.Count - 1)\r\n      return false;\r\n   // only process if inside the range of this list\r\n\r\n   thisList.RemoveAt(position);\r\n   // remove the old item\r\n   thisList.Insert(position, item);\r\n   // insert the new item at its position\r\n   return true;\r\n   // return success\r\n}","List<string> strg = new List<string> { \"test\", \"tesssssst2\" };\r\nstrg.Replace(1,\"test2\");\r\n\r\nforeach (string str in strg)\r\n   Console.WriteLine(str);\r\n\r\nConsole.ReadKey();\r\n\r\nOutput : \r\ntest\r\ntest2"]}