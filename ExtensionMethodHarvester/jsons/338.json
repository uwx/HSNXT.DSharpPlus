{"Name":"LCM","Description":"Uses the Euclidean Algorithm to determine the Least Common Multiplier for an array of integers","Author":"Jeff Reddy","SubmittedOn":"12/1/2011 10:39:31 PM","Entries":["public static class LeastCommonMultiplierCalc {\r\n        /// <summary>\r\n        /// Uses the Euclidean Algorithm to determine the Least Common Multiplier for an array of integers\r\n        /// </summary>\r\n        /// <param name=\"values\">Array of int values</param>\r\n        /// <returns>The Lease Common Multiplier for values provided</returns>\r\n        public static int LCM(this int[] values) {\r\n            var retval = values[0];\r\n            for (var i = 1; i < values.Length; i++) {\r\n                retval = GCD(retval, values[i]);\r\n            }\r\n            return retval;\r\n        }\r\n\r\n        private static int GCD(int val1, int val2) {\r\n            while (val1 != 0 && val2 != 0) {\r\n                if (val1 > val2)\r\n                    val1 %= val2;\r\n                else\r\n                    val2 %= val1;\r\n            }\r\n            return Math.Max(val1, val2);\r\n        }\r\n    }","var numbers = new[] { 21, 63, 91, 119, 154 };\r\n            Console.WriteLine(numbers.LCM());\r\n\r\n            var veryLargeNumbers = new [] {596523235,835132529,477218588,2147483646,2028178999,1073741823};\r\n            Console.WriteLine(veryLargeNumbers.LCM());"]}